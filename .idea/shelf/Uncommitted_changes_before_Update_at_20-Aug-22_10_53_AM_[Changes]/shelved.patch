Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM__Changes_.xml	(revision a681af555d61f2ddc3d519e29113013fe085e765)
+++ /dev/null	(revision a681af555d61f2ddc3d519e29113013fe085e765)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]" date="1660985374349" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-Aug-22 10:49 AM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/.ninja_deps" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/.ninja_deps" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/CMakeFiles/3.23.2/CMakeDetermineCompilerABI_CXX.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/CMakeDetermineCompilerABI_CXX.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/CMakeFiles/Project.dir/main.cpp.obj" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/main.cpp.obj" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/a.exe" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/a.exe" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/a.exe" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/a1.exe" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/Project.exe" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/Project.exe" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/CMakeFiles/3.23.2/CMakeDetermineCompilerABI_C.bin" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/CMakeDetermineCompilerABI_C.bin" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="cmake-build-debug/CMakeFiles/Project.dir/AA_Tree.cpp.obj" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/AA_Tree.cpp.obj" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_20-Aug-22_10_49_AM_[Changes]/shelved.patch	(revision a681af555d61f2ddc3d519e29113013fe085e765)
+++ /dev/null	(revision a681af555d61f2ddc3d519e29113013fe085e765)
@@ -1,5259 +0,0 @@
-Index: .idea/git_toolbox_prj.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/git_toolbox_prj.xml b/.idea/git_toolbox_prj.xml
-new file mode 100644
---- /dev/null	(date 1660850112665)
-+++ b/.idea/git_toolbox_prj.xml	(date 1660850112665)
-@@ -0,0 +1,15 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="GitToolBoxProjectSettings">
-+    <option name="commitMessageIssueKeyValidationOverride">
-+      <BoolValueOverride>
-+        <option name="enabled" value="true" />
-+      </BoolValueOverride>
-+    </option>
-+    <option name="commitMessageValidationEnabledOverride">
-+      <BoolValueOverride>
-+        <option name="enabled" value="true" />
-+      </BoolValueOverride>
-+    </option>
-+  </component>
-+</project>
-\ No newline at end of file
-Index: cmake-build-debug/CMakeCache.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeCache.txt b/cmake-build-debug/CMakeCache.txt
-new file mode 100644
---- /dev/null	(date 1660664120008)
-+++ b/cmake-build-debug/CMakeCache.txt	(date 1660664120008)
-@@ -0,0 +1,402 @@
-+# This is the CMakeCache file.
-+# For build in directory: f:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug
-+# It was generated by CMake: C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cmake.exe
-+# You can edit this file to change values found and used by cmake.
-+# If you do not want to change any of the values, simply exit the editor.
-+# If you do want to change a value, simply edit, save, and exit the editor.
-+# The syntax for the file is as follows:
-+# KEY:TYPE=VALUE
-+# KEY is the name of a variable in the cache.
-+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
-+# VALUE is the current value for the KEY.
-+
-+########################
-+# EXTERNAL cache entries
-+########################
-+
-+//Path to a program.
-+CMAKE_ADDR2LINE:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/addr2line.exe
-+
-+//Path to a program.
-+CMAKE_AR:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/ar.exe
-+
-+//Choose the type of build, options are: None Debug Release RelWithDebInfo
-+// MinSizeRel ...
-+CMAKE_BUILD_TYPE:STRING=Debug
-+
-+//CXX compiler
-+CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/c++.exe
-+
-+//A wrapper around 'ar' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_CXX_COMPILER_AR:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/gcc-ar.exe
-+
-+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_CXX_COMPILER_RANLIB:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/gcc-ranlib.exe
-+
-+//Flags used by the CXX compiler during all build types.
-+CMAKE_CXX_FLAGS:STRING=
-+
-+//Flags used by the CXX compiler during DEBUG builds.
-+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
-+
-+//Flags used by the CXX compiler during MINSIZEREL builds.
-+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
-+
-+//Flags used by the CXX compiler during RELEASE builds.
-+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
-+
-+//Flags used by the CXX compiler during RELWITHDEBINFO builds.
-+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
-+
-+//Libraries linked by default with all C++ applications.
-+CMAKE_CXX_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
-+
-+//C compiler
-+CMAKE_C_COMPILER:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/gcc.exe
-+
-+//A wrapper around 'ar' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_C_COMPILER_AR:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/gcc-ar.exe
-+
-+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_C_COMPILER_RANLIB:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/gcc-ranlib.exe
-+
-+//Flags used by the C compiler during all build types.
-+CMAKE_C_FLAGS:STRING=
-+
-+//Flags used by the C compiler during DEBUG builds.
-+CMAKE_C_FLAGS_DEBUG:STRING=-g
-+
-+//Flags used by the C compiler during MINSIZEREL builds.
-+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
-+
-+//Flags used by the C compiler during RELEASE builds.
-+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
-+
-+//Flags used by the C compiler during RELWITHDEBINFO builds.
-+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
-+
-+//Libraries linked by default with all C applications.
-+CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
-+
-+//Path to a program.
-+CMAKE_DLLTOOL:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/dlltool.exe
-+
-+//Flags used by the linker during all build types.
-+CMAKE_EXE_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during DEBUG builds.
-+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during MINSIZEREL builds.
-+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during RELEASE builds.
-+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during RELWITHDEBINFO builds.
-+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Enable/Disable output of compile commands during generation.
-+CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=
-+
-+//Convert GNU import libraries to MS format (requires Visual Studio)
-+CMAKE_GNUtoMS:BOOL=OFF
-+
-+//Install path prefix, prepended onto install directories.
-+CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/Project
-+
-+//Path to a program.
-+CMAKE_LINKER:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/ld.exe
-+
-+//make program
-+CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe
-+
-+//Flags used by the linker during the creation of modules during
-+// all build types.
-+CMAKE_MODULE_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// DEBUG builds.
-+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// MINSIZEREL builds.
-+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// RELEASE builds.
-+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// RELWITHDEBINFO builds.
-+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_NM:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/nm.exe
-+
-+//Path to a program.
-+CMAKE_OBJCOPY:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/objcopy.exe
-+
-+//Path to a program.
-+CMAKE_OBJDUMP:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/objdump.exe
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_DESCRIPTION:STATIC=
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_NAME:STATIC=Project
-+
-+//Path to a program.
-+CMAKE_RANLIB:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/ranlib.exe
-+
-+//RC compiler
-+CMAKE_RC_COMPILER:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/windres.exe
-+
-+//Flags for Windows Resource Compiler during all build types.
-+CMAKE_RC_FLAGS:STRING=
-+
-+//Flags for Windows Resource Compiler during DEBUG builds.
-+CMAKE_RC_FLAGS_DEBUG:STRING=
-+
-+//Flags for Windows Resource Compiler during MINSIZEREL builds.
-+CMAKE_RC_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags for Windows Resource Compiler during RELEASE builds.
-+CMAKE_RC_FLAGS_RELEASE:STRING=
-+
-+//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
-+CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_READELF:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/readelf.exe
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during all build types.
-+CMAKE_SHARED_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during DEBUG builds.
-+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during MINSIZEREL builds.
-+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during RELEASE builds.
-+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during RELWITHDEBINFO builds.
-+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//If set, runtime paths are not added when installing shared libraries,
-+// but are added when building.
-+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
-+
-+//If set, runtime paths are not added when using shared libraries.
-+CMAKE_SKIP_RPATH:BOOL=NO
-+
-+//Flags used by the linker during the creation of static libraries
-+// during all build types.
-+CMAKE_STATIC_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during DEBUG builds.
-+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during MINSIZEREL builds.
-+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during RELEASE builds.
-+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during RELWITHDEBINFO builds.
-+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_STRIP:FILEPATH=C:/Program Files/mingw-w64/mingw64/bin/strip.exe
-+
-+//If this value is on, makefiles will be generated without the
-+// .SILENT directive, and all commands will be echoed to the console
-+// during the make.  This is useful for debugging only. With Visual
-+// Studio IDE projects all commands are done without /nologo.
-+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
-+
-+//Value Computed by CMake
-+Project_BINARY_DIR:STATIC=F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug
-+
-+//Value Computed by CMake
-+Project_IS_TOP_LEVEL:STATIC=ON
-+
-+//Value Computed by CMake
-+Project_SOURCE_DIR:STATIC=F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project
-+
-+
-+########################
-+# INTERNAL cache entries
-+########################
-+
-+//ADVANCED property for variable: CMAKE_ADDR2LINE
-+CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_AR
-+CMAKE_AR-ADVANCED:INTERNAL=1
-+//This is the directory where this CMakeCache.txt was created
-+CMAKE_CACHEFILE_DIR:INTERNAL=f:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug
-+//Major version of cmake used to create the current loaded cache
-+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
-+//Minor version of cmake used to create the current loaded cache
-+CMAKE_CACHE_MINOR_VERSION:INTERNAL=23
-+//Patch version of cmake used to create the current loaded cache
-+CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
-+//Path to CMake executable.
-+CMAKE_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cmake.exe
-+//Path to cpack program executable.
-+CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cpack.exe
-+//Path to ctest program executable.
-+CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/ctest.exe
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER
-+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
-+CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
-+CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS
-+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
-+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
-+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
-+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
-+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
-+CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER
-+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER_AR
-+CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
-+CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS
-+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
-+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
-+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
-+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
-+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
-+CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_DLLTOOL
-+CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
-+//Executable file format
-+CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
-+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
-+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
-+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
-+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
-+CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
-+//Name of external makefile project generator.
-+CMAKE_EXTRA_GENERATOR:INTERNAL=
-+//Name of generator.
-+CMAKE_GENERATOR:INTERNAL=Ninja
-+//Generator instance identifier.
-+CMAKE_GENERATOR_INSTANCE:INTERNAL=
-+//Name of generator platform.
-+CMAKE_GENERATOR_PLATFORM:INTERNAL=
-+//Name of generator toolset.
-+CMAKE_GENERATOR_TOOLSET:INTERNAL=
-+//Source directory with the top level CMakeLists.txt file for this
-+// project
-+CMAKE_HOME_DIRECTORY:INTERNAL=F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project
-+//ADVANCED property for variable: CMAKE_LINKER
-+CMAKE_LINKER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
-+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
-+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
-+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
-+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_NM
-+CMAKE_NM-ADVANCED:INTERNAL=1
-+//number of local generators
-+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_OBJCOPY
-+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_OBJDUMP
-+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
-+//Platform information initialized
-+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RANLIB
-+CMAKE_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_COMPILER
-+CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
-+CMAKE_RC_COMPILER_WORKS:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS
-+CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
-+CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
-+CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
-+CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
-+CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_READELF
-+CMAKE_READELF-ADVANCED:INTERNAL=1
-+//Path to CMake installation.
-+CMAKE_ROOT:INTERNAL=C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
-+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
-+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
-+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
-+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
-+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SKIP_RPATH
-+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
-+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
-+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
-+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
-+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STRIP
-+CMAKE_STRIP-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
-+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
-+
-Index: cmake-build-debug/.cmake/api/v1/reply/index-2022-08-18T18-57-09-0365.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2022-08-18T18-57-09-0365.json b/cmake-build-debug/.cmake/api/v1/reply/index-2022-08-18T18-57-09-0365.json
-new file mode 100644
---- /dev/null	(date 1660849029363)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/index-2022-08-18T18-57-09-0365.json	(date 1660849029363)
-@@ -0,0 +1,108 @@
-+{
-+	"cmake" : 
-+	{
-+		"generator" : 
-+		{
-+			"multiConfig" : false,
-+			"name" : "Ninja"
-+		},
-+		"paths" : 
-+		{
-+			"cmake" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cmake.exe",
-+			"cpack" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cpack.exe",
-+			"ctest" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/ctest.exe",
-+			"root" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23"
-+		},
-+		"version" : 
-+		{
-+			"isDirty" : false,
-+			"major" : 3,
-+			"minor" : 23,
-+			"patch" : 2,
-+			"string" : "3.23.2",
-+			"suffix" : ""
-+		}
-+	},
-+	"objects" : 
-+	[
-+		{
-+			"jsonFile" : "codemodel-v2-c66035bc840ee4bac614.json",
-+			"kind" : "codemodel",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 4
-+			}
-+		},
-+		{
-+			"jsonFile" : "cache-v2-3cfa38857e66886af34d.json",
-+			"kind" : "cache",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 0
-+			}
-+		},
-+		{
-+			"jsonFile" : "cmakeFiles-v1-e974cfcbd5908f0ed9cf.json",
-+			"kind" : "cmakeFiles",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		},
-+		{
-+			"jsonFile" : "toolchains-v1-82f02c0e915771314189.json",
-+			"kind" : "toolchains",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		}
-+	],
-+	"reply" : 
-+	{
-+		"cache-v2" : 
-+		{
-+			"jsonFile" : "cache-v2-3cfa38857e66886af34d.json",
-+			"kind" : "cache",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 0
-+			}
-+		},
-+		"cmakeFiles-v1" : 
-+		{
-+			"jsonFile" : "cmakeFiles-v1-e974cfcbd5908f0ed9cf.json",
-+			"kind" : "cmakeFiles",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		},
-+		"codemodel-v2" : 
-+		{
-+			"jsonFile" : "codemodel-v2-c66035bc840ee4bac614.json",
-+			"kind" : "codemodel",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 4
-+			}
-+		},
-+		"toolchains-v1" : 
-+		{
-+			"jsonFile" : "toolchains-v1-82f02c0e915771314189.json",
-+			"kind" : "toolchains",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		}
-+	}
-+}
-Index: cmake-build-debug/build.ninja
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
-new file mode 100644
---- /dev/null	(date 1660849029279)
-+++ b/cmake-build-debug/build.ninja	(date 1660849029279)
-@@ -0,0 +1,152 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "Ninja" Generator, CMake Version 3.23
-+
-+# This file contains all the build statements describing the
-+# compilation DAG.
-+
-+# =============================================================================
-+# Write statements declared in CMakeLists.txt:
-+# 
-+# Which is the root file.
-+# =============================================================================
-+
-+# =============================================================================
-+# Project: Project
-+# Configurations: Debug
-+# =============================================================================
-+
-+#############################################
-+# Minimal version of Ninja required by this file
-+
-+ninja_required_version = 1.5
-+
-+
-+#############################################
-+# Set configuration variable for custom commands.
-+
-+CONFIGURATION = Debug
-+# =============================================================================
-+# Include auxiliary files.
-+
-+
-+#############################################
-+# Include rules file.
-+
-+include CMakeFiles/rules.ninja
-+
-+# =============================================================================
-+
-+#############################################
-+# Logical path to working directory; prefix for absolute paths.
-+
-+cmake_ninja_workdir = F$:/Harvard$ Abdo$ Basha/SMR$ 2022/DS/DR$ Ashraf$ lecs/Project/cmake-build-debug/
-+# =============================================================================
-+# Object build statements for EXECUTABLE target Project
-+
-+
-+#############################################
-+# Order-only phony target for Project
-+
-+build cmake_object_order_depends_target_Project: phony || CMakeFiles/Project.dir
-+
-+build CMakeFiles/Project.dir/main.cpp.obj: CXX_COMPILER__Project_Debug F$:/Harvard$ Abdo$ Basha/SMR$ 2022/DS/DR$ Ashraf$ lecs/Project/main.cpp || cmake_object_order_depends_target_Project
-+  DEP_FILE = CMakeFiles\Project.dir\main.cpp.obj.d
-+  FLAGS = -g
-+  OBJECT_DIR = CMakeFiles\Project.dir
-+  OBJECT_FILE_DIR = CMakeFiles\Project.dir
-+
-+build CMakeFiles/Project.dir/AA_Tree.cpp.obj: CXX_COMPILER__Project_Debug F$:/Harvard$ Abdo$ Basha/SMR$ 2022/DS/DR$ Ashraf$ lecs/Project/AA_Tree.cpp || cmake_object_order_depends_target_Project
-+  DEP_FILE = CMakeFiles\Project.dir\AA_Tree.cpp.obj.d
-+  FLAGS = -g
-+  OBJECT_DIR = CMakeFiles\Project.dir
-+  OBJECT_FILE_DIR = CMakeFiles\Project.dir
-+
-+
-+# =============================================================================
-+# Link build statements for EXECUTABLE target Project
-+
-+
-+#############################################
-+# Link the executable Project.exe
-+
-+build Project.exe: CXX_EXECUTABLE_LINKER__Project_Debug CMakeFiles/Project.dir/main.cpp.obj CMakeFiles/Project.dir/AA_Tree.cpp.obj
-+  FLAGS = -g
-+  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
-+  OBJECT_DIR = CMakeFiles\Project.dir
-+  POST_BUILD = cd .
-+  PRE_LINK = cd .
-+  TARGET_FILE = Project.exe
-+  TARGET_IMPLIB = libProject.dll.a
-+  TARGET_PDB = Project.exe.dbg
-+
-+
-+#############################################
-+# Utility command for edit_cache
-+
-+build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
-+  COMMAND = cmd.exe /C "cd /D "F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project\cmake-build-debug" && "C:\Program Files\JetBrains\CLion 2021.1.3\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
-+  DESC = No interactive CMake dialog available...
-+  restat = 1
-+
-+build edit_cache: phony CMakeFiles/edit_cache.util
-+
-+
-+#############################################
-+# Utility command for rebuild_cache
-+
-+build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
-+  COMMAND = cmd.exe /C "cd /D "F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project\cmake-build-debug" && "C:\Program Files\JetBrains\CLion 2021.1.3\bin\cmake\win\bin\cmake.exe" --regenerate-during-build -S"F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project" -B"F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project\cmake-build-debug""
-+  DESC = Running CMake to regenerate build system...
-+  pool = console
-+  restat = 1
-+
-+build rebuild_cache: phony CMakeFiles/rebuild_cache.util
-+
-+# =============================================================================
-+# Target aliases.
-+
-+build Project: phony Project.exe
-+
-+# =============================================================================
-+# Folder targets.
-+
-+# =============================================================================
-+
-+#############################################
-+# Folder: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug
-+
-+build all: phony Project.exe
-+
-+# =============================================================================
-+# Built-in targets
-+
-+
-+#############################################
-+# Re-run CMake if any of its inputs changed.
-+
-+build build.ninja: RERUN_CMAKE | ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCXXInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-CXX-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.23.2/CMakeCCompiler.cmake CMakeFiles/3.23.2/CMakeCXXCompiler.cmake CMakeFiles/3.23.2/CMakeRCCompiler.cmake CMakeFiles/3.23.2/CMakeSystem.cmake
-+  pool = console
-+
-+
-+#############################################
-+# A missing CMake input file is not an error.
-+
-+build ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCXXInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-CXX-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-CXX.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.23.2/CMakeCCompiler.cmake CMakeFiles/3.23.2/CMakeCXXCompiler.cmake CMakeFiles/3.23.2/CMakeRCCompiler.cmake CMakeFiles/3.23.2/CMakeSystem.cmake: phony
-+
-+
-+#############################################
-+# Clean all the built files.
-+
-+build clean: CLEAN
-+
-+
-+#############################################
-+# Print all primary targets available.
-+
-+build help: HELP
-+
-+
-+#############################################
-+# Make the all target the default.
-+
-+default all
-Index: .gitignore
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.gitignore b/.gitignore
-new file mode 100644
---- /dev/null	(date 1660850294484)
-+++ b/.gitignore	(date 1660850294484)
-@@ -0,0 +1,1 @@
-+/cmake-build-debug/
-Index: cmake-build-debug/cmake_install.cmake
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/cmake_install.cmake b/cmake-build-debug/cmake_install.cmake
-new file mode 100644
---- /dev/null	(date 1660664120034)
-+++ b/cmake-build-debug/cmake_install.cmake	(date 1660664120034)
-@@ -0,0 +1,49 @@
-+# Install script for directory: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project
-+
-+# Set the install prefix
-+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
-+  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/Project")
-+endif()
-+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
-+
-+# Set the install configuration name.
-+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
-+  if(BUILD_TYPE)
-+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
-+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
-+  else()
-+    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
-+  endif()
-+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
-+endif()
-+
-+# Set the component getting installed.
-+if(NOT CMAKE_INSTALL_COMPONENT)
-+  if(COMPONENT)
-+    message(STATUS "Install component: \"${COMPONENT}\"")
-+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
-+  else()
-+    set(CMAKE_INSTALL_COMPONENT)
-+  endif()
-+endif()
-+
-+# Is this installation the result of a crosscompile?
-+if(NOT DEFINED CMAKE_CROSSCOMPILING)
-+  set(CMAKE_CROSSCOMPILING "FALSE")
-+endif()
-+
-+# Set default install directory permissions.
-+if(NOT DEFINED CMAKE_OBJDUMP)
-+  set(CMAKE_OBJDUMP "C:/Program Files/mingw-w64/mingw64/bin/objdump.exe")
-+endif()
-+
-+if(CMAKE_INSTALL_COMPONENT)
-+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
-+else()
-+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
-+endif()
-+
-+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
-+       "${CMAKE_INSTALL_MANIFEST_FILES}")
-+file(WRITE "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
-+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
-Index: cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-82f02c0e915771314189.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-82f02c0e915771314189.json b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-82f02c0e915771314189.json
-new file mode 100644
---- /dev/null	(date 1660664120149)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-82f02c0e915771314189.json	(date 1660664120149)
-@@ -0,0 +1,135 @@
-+{
-+	"kind" : "toolchains",
-+	"toolchains" : 
-+	[
-+		{
-+			"compiler" : 
-+			{
-+				"id" : "GNU",
-+				"implicit" : 
-+				{
-+					"includeDirectories" : 
-+					[
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed",
-+						"C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include"
-+					],
-+					"linkDirectories" : 
-+					[
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc",
-+						"C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib",
-+						"C:/Program Files/mingw-w64/mingw64/lib"
-+					],
-+					"linkFrameworkDirectories" : [],
-+					"linkLibraries" : 
-+					[
-+						"mingw32",
-+						"gcc",
-+						"moldname",
-+						"mingwex",
-+						"pthread",
-+						"advapi32",
-+						"shell32",
-+						"user32",
-+						"kernel32",
-+						"iconv",
-+						"mingw32",
-+						"gcc",
-+						"moldname",
-+						"mingwex"
-+					]
-+				},
-+				"path" : "C:/Program Files/mingw-w64/mingw64/bin/gcc.exe",
-+				"version" : "8.1.0"
-+			},
-+			"language" : "C",
-+			"sourceFileExtensions" : 
-+			[
-+				"c",
-+				"m"
-+			]
-+		},
-+		{
-+			"compiler" : 
-+			{
-+				"id" : "GNU",
-+				"implicit" : 
-+				{
-+					"includeDirectories" : 
-+					[
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed",
-+						"C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include"
-+					],
-+					"linkDirectories" : 
-+					[
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0",
-+						"C:/Program Files/mingw-w64/mingw64/lib/gcc",
-+						"C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib",
-+						"C:/Program Files/mingw-w64/mingw64/lib"
-+					],
-+					"linkFrameworkDirectories" : [],
-+					"linkLibraries" : 
-+					[
-+						"stdc++",
-+						"mingw32",
-+						"gcc_s",
-+						"gcc",
-+						"moldname",
-+						"mingwex",
-+						"pthread",
-+						"advapi32",
-+						"shell32",
-+						"user32",
-+						"kernel32",
-+						"iconv",
-+						"mingw32",
-+						"gcc_s",
-+						"gcc",
-+						"moldname",
-+						"mingwex"
-+					]
-+				},
-+				"path" : "C:/Program Files/mingw-w64/mingw64/bin/c++.exe",
-+				"version" : "8.1.0"
-+			},
-+			"language" : "CXX",
-+			"sourceFileExtensions" : 
-+			[
-+				"C",
-+				"M",
-+				"c++",
-+				"cc",
-+				"cpp",
-+				"cxx",
-+				"mm",
-+				"mpp",
-+				"CPP",
-+				"ixx",
-+				"cppm"
-+			]
-+		},
-+		{
-+			"compiler" : 
-+			{
-+				"implicit" : {},
-+				"path" : "C:/Program Files/mingw-w64/mingw64/bin/windres.exe"
-+			},
-+			"language" : "RC",
-+			"sourceFileExtensions" : 
-+			[
-+				"rc",
-+				"RC"
-+			]
-+		}
-+	],
-+	"version" : 
-+	{
-+		"major" : 1,
-+		"minor" : 0
-+	}
-+}
-Index: cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
-new file mode 100644
---- /dev/null	(date 1660664120142)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json	(date 1660664120142)
-@@ -0,0 +1,14 @@
-+{
-+	"backtraceGraph" : 
-+	{
-+		"commands" : [],
-+		"files" : [],
-+		"nodes" : []
-+	},
-+	"installers" : [],
-+	"paths" : 
-+	{
-+		"build" : ".",
-+		"source" : "."
-+	}
-+}
-Index: cmake-build-debug/.cmake/api/v1/reply/cache-v2-3cfa38857e66886af34d.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/cache-v2-3cfa38857e66886af34d.json b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-3cfa38857e66886af34d.json
-new file mode 100644
---- /dev/null	(date 1660664120124)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-3cfa38857e66886af34d.json	(date 1660664120124)
-@@ -0,0 +1,1275 @@
-+{
-+	"entries" : 
-+	[
-+		{
-+			"name" : "CMAKE_ADDR2LINE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/addr2line.exe"
-+		},
-+		{
-+			"name" : "CMAKE_AR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/ar.exe"
-+		},
-+		{
-+			"name" : "CMAKE_BUILD_TYPE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ..."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "Debug"
-+		},
-+		{
-+			"name" : "CMAKE_CACHEFILE_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "This is the directory where this CMakeCache.txt was created"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "f:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug"
-+		},
-+		{
-+			"name" : "CMAKE_CACHE_MAJOR_VERSION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Major version of cmake used to create the current loaded cache"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "3"
-+		},
-+		{
-+			"name" : "CMAKE_CACHE_MINOR_VERSION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Minor version of cmake used to create the current loaded cache"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "23"
-+		},
-+		{
-+			"name" : "CMAKE_CACHE_PATCH_VERSION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Patch version of cmake used to create the current loaded cache"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "2"
-+		},
-+		{
-+			"name" : "CMAKE_COMMAND",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to CMake executable."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cmake.exe"
-+		},
-+		{
-+			"name" : "CMAKE_CPACK_COMMAND",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to cpack program executable."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/cpack.exe"
-+		},
-+		{
-+			"name" : "CMAKE_CTEST_COMMAND",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to ctest program executable."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/bin/ctest.exe"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_COMPILER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "CXX compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/c++.exe"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_COMPILER_AR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/gcc-ar.exe"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_COMPILER_RANLIB",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/gcc-ranlib.exe"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-g"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-Os -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O3 -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O2 -g -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_STANDARD_LIBRARIES",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Libraries linked by default with all C++ applications."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32"
-+		},
-+		{
-+			"name" : "CMAKE_C_COMPILER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "C compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/gcc.exe"
-+		},
-+		{
-+			"name" : "CMAKE_C_COMPILER_AR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/gcc-ar.exe"
-+		},
-+		{
-+			"name" : "CMAKE_C_COMPILER_RANLIB",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/gcc-ranlib.exe"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-g"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-Os -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O3 -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O2 -g -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_C_STANDARD_LIBRARIES",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Libraries linked by default with all C applications."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32"
-+		},
-+		{
-+			"name" : "CMAKE_DLLTOOL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/dlltool.exe"
-+		},
-+		{
-+			"name" : "CMAKE_EXECUTABLE_FORMAT",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Executable file format"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "Unknown"
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXPORT_COMPILE_COMMANDS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Enable/Disable output of compile commands during generation."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXTRA_GENERATOR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of external makefile project generator."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of generator."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "Ninja"
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR_INSTANCE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Generator instance identifier."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR_PLATFORM",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of generator platform."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR_TOOLSET",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of generator toolset."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_GNUtoMS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Convert GNU import libraries to MS format (requires Visual Studio)"
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "OFF"
-+		},
-+		{
-+			"name" : "CMAKE_HOME_DIRECTORY",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Source directory with the top level CMakeLists.txt file for this project"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project"
-+		},
-+		{
-+			"name" : "CMAKE_INSTALL_PREFIX",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Install path prefix, prepended onto install directories."
-+				}
-+			],
-+			"type" : "PATH",
-+			"value" : "C:/Program Files (x86)/Project"
-+		},
-+		{
-+			"name" : "CMAKE_LINKER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/ld.exe"
-+		},
-+		{
-+			"name" : "CMAKE_MAKE_PROGRAM",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "make program"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe"
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_NM",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/nm.exe"
-+		},
-+		{
-+			"name" : "CMAKE_NUMBER_OF_MAKEFILES",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "number of local generators"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "1"
-+		},
-+		{
-+			"name" : "CMAKE_OBJCOPY",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/objcopy.exe"
-+		},
-+		{
-+			"name" : "CMAKE_OBJDUMP",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/objdump.exe"
-+		},
-+		{
-+			"name" : "CMAKE_PLATFORM_INFO_INITIALIZED",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Platform information initialized"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "1"
-+		},
-+		{
-+			"name" : "CMAKE_PROJECT_DESCRIPTION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_PROJECT_HOMEPAGE_URL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_PROJECT_NAME",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "Project"
-+		},
-+		{
-+			"name" : "CMAKE_RANLIB",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/ranlib.exe"
-+		},
-+		{
-+			"name" : "CMAKE_RC_COMPILER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "RC compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/windres.exe"
-+		},
-+		{
-+			"name" : "CMAKE_RC_COMPILER_WORKS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : ""
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "1"
-+		},
-+		{
-+			"name" : "CMAKE_RC_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags for Windows Resource Compiler during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_RC_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags for Windows Resource Compiler during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_RC_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags for Windows Resource Compiler during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_RC_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags for Windows Resource Compiler during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_RC_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags for Windows Resource Compiler during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_READELF",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/readelf.exe"
-+		},
-+		{
-+			"name" : "CMAKE_ROOT",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to CMake installation."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23"
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SKIP_INSTALL_RPATH",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "If set, runtime paths are not added when installing shared libraries, but are added when building."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "NO"
-+		},
-+		{
-+			"name" : "CMAKE_SKIP_RPATH",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "If set, runtime paths are not added when using shared libraries."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "NO"
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STRIP",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "C:/Program Files/mingw-w64/mingw64/bin/strip.exe"
-+		},
-+		{
-+			"name" : "CMAKE_VERBOSE_MAKEFILE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "FALSE"
-+		},
-+		{
-+			"name" : "Project_BINARY_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug"
-+		},
-+		{
-+			"name" : "Project_IS_TOP_LEVEL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "ON"
-+		},
-+		{
-+			"name" : "Project_SOURCE_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project"
-+		}
-+	],
-+	"kind" : "cache",
-+	"version" : 
-+	{
-+		"major" : 2,
-+		"minor" : 0
-+	}
-+}
-Index: cmake-build-debug/CMakeFiles/CMakeOutput.log
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/CMakeOutput.log b/cmake-build-debug/CMakeFiles/CMakeOutput.log
-new file mode 100644
---- /dev/null	(date 1660664119961)
-+++ b/cmake-build-debug/CMakeFiles/CMakeOutput.log	(date 1660664119961)
-@@ -0,0 +1,574 @@
-+The system is: Windows - 10.0.19044 - AMD64
-+Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
-+Compiler: C:/Program Files/mingw-w64/mingw64/bin/gcc.exe 
-+Build flags: 
-+Id flags:  
-+
-+The output was:
-+0
-+
-+
-+Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"
-+
-+The C compiler identification is GNU, found in "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/a.exe"
-+
-+Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
-+Compiler: C:/Program Files/mingw-w64/mingw64/bin/c++.exe 
-+Build flags: 
-+Id flags:  
-+
-+The output was:
-+0
-+
-+
-+Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"
-+
-+The CXX compiler identification is GNU, found in "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/a.exe"
-+
-+Detecting C compiler ABI info compiled with the following output:
-+Change Dir: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/CMakeTmp
-+
-+Run Build Command(s):C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe cmTC_0f713 && [1/2] Building C object CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj
-+
-+Using built-in specs.
-+
-+COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\gcc.exe
-+
-+Target: x86_64-w64-mingw32
-+
-+Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib '
-+
-+Thread model: posix
-+
-+gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=core2' '-march=nocona'
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/cc1.exe -quiet -v -iprefix C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=core2 -march=nocona -auxbase-strip CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj -version -o C:\Users\ahmed\AppData\Local\Temp\cck81hei.s
-+
-+GNU C17 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)
-+
-+	compiled by GNU C version 8.1.0, GMP version 6.1.2, MPFR version 4.0.1, MPC version 1.1.0, isl version isl-0.18-GMP
-+
-+
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include"
-+
-+ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../include"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include"
-+
-+ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/include"
-+
-+#include "..." search starts here:
-+
-+#include <...> search starts here:
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include
-+
-+End of search list.
-+
-+GNU C17 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)
-+
-+	compiled by GNU C version 8.1.0, GMP version 6.1.2, MPFR version 4.0.1, MPC version 1.1.0, isl version isl-0.18-GMP
-+
-+
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+
-+Compiler executable checksum: 985ce7ae6dd3a696cd146ca9896b0035
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=core2' '-march=nocona'
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj C:\Users\ahmed\AppData\Local\Temp\cck81hei.s
-+
-+GNU assembler version 2.30 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.30
-+
-+COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/
-+
-+LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=core2' '-march=nocona'
-+
-+[2/2] Linking C executable cmTC_0f713.exe
-+
-+Using built-in specs.
-+
-+COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\gcc.exe
-+
-+COLLECT_LTO_WRAPPER=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe
-+
-+Target: x86_64-w64-mingw32
-+
-+Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib '
-+
-+Thread model: posix
-+
-+gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 
-+
-+COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/
-+
-+LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_0f713.exe' '-mtune=core2' '-march=nocona'
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/collect2.exe -plugin C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/liblto_plugin-0.dll -plugin-opt=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\ahmed\AppData\Local\Temp\cczzWEPf.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_eh -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-liconv -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_eh -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt --sysroot=C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 -m i386pep -Bdynamic -o cmTC_0f713.exe C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0 -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../.. CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj --out-implib libcmTC_0f713.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_0f713.exe' '-mtune=core2' '-march=nocona'
-+
-+
-+
-+
-+Parsed C implicit include dir info from above output: rv=done
-+  found start of include info
-+  found start of implicit include info
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include]
-+  end of search list found
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include]
-+  implicit include dirs: [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include]
-+
-+
-+Parsed C implicit link information from above output:
-+  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-+  ignore line: [Change Dir: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/CMakeTmp]
-+  ignore line: []
-+  ignore line: [Run Build Command(s):C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe cmTC_0f713 && [1/2] Building C object CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\gcc.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib ']
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 8.1.0 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) ]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=core2' '-march=nocona']
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/cc1.exe -quiet -v -iprefix C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=core2 -march=nocona -auxbase-strip CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj -version -o C:\Users\ahmed\AppData\Local\Temp\cck81hei.s]
-+  ignore line: [GNU C17 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 8.1.0  GMP version 6.1.2  MPFR version 4.0.1  MPC version 1.1.0  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include"]
-+  ignore line: [ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../include"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include"]
-+  ignore line: [ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/include"]
-+  ignore line: [#include "..." search starts here:]
-+  ignore line: [#include <...> search starts here:]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include]
-+  ignore line: [End of search list.]
-+  ignore line: [GNU C17 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 8.1.0  GMP version 6.1.2  MPFR version 4.0.1  MPC version 1.1.0  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [Compiler executable checksum: 985ce7ae6dd3a696cd146ca9896b0035]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=core2' '-march=nocona']
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj C:\Users\ahmed\AppData\Local\Temp\cck81hei.s]
-+  ignore line: [GNU assembler version 2.30 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.30]
-+  ignore line: [COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj' '-c' '-mtune=core2' '-march=nocona']
-+  ignore line: [[2/2] Linking C executable cmTC_0f713.exe]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\gcc.exe]
-+  ignore line: [COLLECT_LTO_WRAPPER=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib ']
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 8.1.0 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) ]
-+  ignore line: [COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_0f713.exe' '-mtune=core2' '-march=nocona']
-+  link line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/collect2.exe -plugin C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/liblto_plugin-0.dll -plugin-opt=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\ahmed\AppData\Local\Temp\cczzWEPf.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_eh -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-liconv -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_eh -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt --sysroot=C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 -m i386pep -Bdynamic -o cmTC_0f713.exe C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0 -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../.. CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj --out-implib libcmTC_0f713.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc -lgcc_eh -lmoldname -lmingwex -lmsvcrt C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/collect2.exe] ==> ignore
-+    arg [-plugin] ==> ignore
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/liblto_plugin-0.dll] ==> ignore
-+    arg [-plugin-opt=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe] ==> ignore
-+    arg [-plugin-opt=-fresolution=C:\Users\ahmed\AppData\Local\Temp\cczzWEPf.res] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc_eh] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
-+    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-liconv] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc_eh] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [--sysroot=C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64] ==> ignore
-+    arg [-m] ==> ignore
-+    arg [i386pep] ==> ignore
-+    arg [-Bdynamic] ==> search dynamic
-+    arg [-o] ==> ignore
-+    arg [cmTC_0f713.exe] ==> ignore
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o]
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o] ==> obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../..] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../..]
-+    arg [CMakeFiles/cmTC_0f713.dir/CMakeCCompilerABI.c.obj] ==> ignore
-+    arg [--out-implib] ==> ignore
-+    arg [libcmTC_0f713.dll.a] ==> ignore
-+    arg [--major-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [--minor-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lgcc_eh] ==> lib [gcc_eh]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [-lpthread] ==> lib [pthread]
-+    arg [-ladvapi32] ==> lib [advapi32]
-+    arg [-lshell32] ==> lib [shell32]
-+    arg [-luser32] ==> lib [user32]
-+    arg [-lkernel32] ==> lib [kernel32]
-+    arg [-liconv] ==> lib [iconv]
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lgcc_eh] ==> lib [gcc_eh]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o] ==> obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+  remove lib [gcc_eh]
-+  remove lib [msvcrt]
-+  remove lib [gcc_eh]
-+  remove lib [msvcrt]
-+  collapse obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib/crt2.o]
-+  collapse obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o]
-+  collapse obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib] ==> [C:/Program Files/mingw-w64/mingw64/lib]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../..] ==> [C:/Program Files/mingw-w64/mingw64/lib]
-+  implicit libs: [mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;iconv;mingw32;gcc;moldname;mingwex]
-+  implicit objs: [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib/crt2.o;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+  implicit dirs: [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0;C:/Program Files/mingw-w64/mingw64/lib/gcc;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib;C:/Program Files/mingw-w64/mingw64/lib]
-+  implicit fwks: []
-+
-+
-+Detecting CXX compiler ABI info compiled with the following output:
-+Change Dir: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/CMakeTmp
-+
-+Run Build Command(s):C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe cmTC_359e5 && [1/2] Building CXX object CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj
-+
-+Using built-in specs.
-+
-+COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\C__~1.EXE
-+
-+Target: x86_64-w64-mingw32
-+
-+Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib '
-+
-+Thread model: posix
-+
-+gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=core2' '-march=nocona'
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/cc1plus.exe -quiet -v -iprefix C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=core2 -march=nocona -auxbase-strip CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\ahmed\AppData\Local\Temp\ccNAjgpT.s
-+
-+GNU C++14 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)
-+
-+	compiled by GNU C version 8.1.0, GMP version 6.1.2, MPFR version 4.0.1, MPC version 1.1.0, isl version isl-0.18-GMP
-+
-+
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include"
-+
-+ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../include"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed"
-+
-+ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include"
-+
-+ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/include"
-+
-+#include "..." search starts here:
-+
-+#include <...> search starts here:
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include
-+
-+End of search list.
-+
-+GNU C++14 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)
-+
-+	compiled by GNU C version 8.1.0, GMP version 6.1.2, MPFR version 4.0.1, MPC version 1.1.0, isl version isl-0.18-GMP
-+
-+
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+
-+Compiler executable checksum: 82f0c9785fd37a38ba7b7f8357369a82
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=core2' '-march=nocona'
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj C:\Users\ahmed\AppData\Local\Temp\ccNAjgpT.s
-+
-+GNU assembler version 2.30 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.30
-+
-+COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/
-+
-+LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=core2' '-march=nocona'
-+
-+[2/2] Linking CXX executable cmTC_359e5.exe
-+
-+Using built-in specs.
-+
-+COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\C__~1.EXE
-+
-+COLLECT_LTO_WRAPPER=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe
-+
-+Target: x86_64-w64-mingw32
-+
-+Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib '
-+
-+Thread model: posix
-+
-+gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 
-+
-+COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/
-+
-+LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_359e5.exe' '-shared-libgcc' '-mtune=core2' '-march=nocona'
-+
-+ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/collect2.exe -plugin C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/liblto_plugin-0.dll -plugin-opt=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\ahmed\AppData\Local\Temp\ccl053v3.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-liconv -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt --sysroot=C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 -m i386pep -Bdynamic -o cmTC_359e5.exe C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0 -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../.. CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj --out-implib libcmTC_359e5.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o
-+
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_359e5.exe' '-shared-libgcc' '-mtune=core2' '-march=nocona'
-+
-+
-+
-+
-+Parsed CXX implicit include dir info from above output: rv=done
-+  found start of include info
-+  found start of implicit include info
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed]
-+    add: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include]
-+  end of search list found
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed]
-+  collapse include dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include]
-+  implicit include dirs: [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include]
-+
-+
-+Parsed CXX implicit link information from above output:
-+  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-+  ignore line: [Change Dir: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/CMakeTmp]
-+  ignore line: []
-+  ignore line: [Run Build Command(s):C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe cmTC_359e5 && [1/2] Building CXX object CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\C__~1.EXE]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib ']
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 8.1.0 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) ]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=core2' '-march=nocona']
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/cc1plus.exe -quiet -v -iprefix C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/ -D_REENTRANT C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=core2 -march=nocona -auxbase-strip CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\ahmed\AppData\Local\Temp\ccNAjgpT.s]
-+  ignore line: [GNU C++14 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 8.1.0  GMP version 6.1.2  MPFR version 4.0.1  MPC version 1.1.0  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include"]
-+  ignore line: [ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../include"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed"]
-+  ignore line: [ignoring duplicate directory "C:/PROGRA~1/MINGW-~1/mingw64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include"]
-+  ignore line: [ignoring nonexistent directory "C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/include"]
-+  ignore line: [#include "..." search starts here:]
-+  ignore line: [#include <...> search starts here:]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed]
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/include]
-+  ignore line: [End of search list.]
-+  ignore line: [GNU C++14 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) version 8.1.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 8.1.0  GMP version 6.1.2  MPFR version 4.0.1  MPC version 1.1.0  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [Compiler executable checksum: 82f0c9785fd37a38ba7b7f8357369a82]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=core2' '-march=nocona']
-+  ignore line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj C:\Users\ahmed\AppData\Local\Temp\ccNAjgpT.s]
-+  ignore line: [GNU assembler version 2.30 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.30]
-+  ignore line: [COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj' '-c' '-shared-libgcc' '-mtune=core2' '-march=nocona']
-+  ignore line: [[2/2] Linking CXX executable cmTC_359e5.exe]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\PROGRA~1\MINGW-~1\mingw64\bin\C__~1.EXE]
-+  ignore line: [COLLECT_LTO_WRAPPER=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-8.1.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw810/prerequisites/x86_64-w64-mingw32-static --with-pkgversion='x86_64-posix-seh-rev0, Built by MinGW-W64 project' --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CXXFLAGS='-O2 -pipe -fno-ident -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' CPPFLAGS=' -I/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/include -I/c/mingw810/prerequisites/x86_64-zlib-static/include -I/c/mingw810/prerequisites/x86_64-w64-mingw32-static/include' LDFLAGS='-pipe -fno-ident -L/c/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/opt/lib -L/c/mingw810/prerequisites/x86_64-zlib-static/lib -L/c/mingw810/prerequisites/x86_64-w64-mingw32-static/lib ']
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 8.1.0 (x86_64-posix-seh-rev0  Built by MinGW-W64 project) ]
-+  ignore line: [COMPILER_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_359e5.exe' '-shared-libgcc' '-mtune=core2' '-march=nocona']
-+  link line: [ C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/collect2.exe -plugin C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/liblto_plugin-0.dll -plugin-opt=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\ahmed\AppData\Local\Temp\ccl053v3.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-liconv -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt --sysroot=C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64 -m i386pep -Bdynamic -o cmTC_359e5.exe C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0 -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib -LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../.. CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj --out-implib libcmTC_359e5.dll.a --major-image-version 0 --minor-image-version 0 -lstdc++ -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -liconv -lmingw32 -lgcc_s -lgcc -lmoldname -lmingwex -lmsvcrt C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/collect2.exe] ==> ignore
-+    arg [-plugin] ==> ignore
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/liblto_plugin-0.dll] ==> ignore
-+    arg [-plugin-opt=C:/PROGRA~1/MINGW-~1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/lto-wrapper.exe] ==> ignore
-+    arg [-plugin-opt=-fresolution=C:\Users\ahmed\AppData\Local\Temp\ccl053v3.res] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
-+    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-liconv] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [--sysroot=C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64] ==> ignore
-+    arg [-m] ==> ignore
-+    arg [i386pep] ==> ignore
-+    arg [-Bdynamic] ==> search dynamic
-+    arg [-o] ==> ignore
-+    arg [cmTC_359e5.exe] ==> ignore
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o]
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o] ==> obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib]
-+    arg [-LC:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../..] ==> dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../..]
-+    arg [CMakeFiles/cmTC_359e5.dir/CMakeCXXCompilerABI.cpp.obj] ==> ignore
-+    arg [--out-implib] ==> ignore
-+    arg [libcmTC_359e5.dll.a] ==> ignore
-+    arg [--major-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [--minor-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [-lstdc++] ==> lib [stdc++]
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc_s] ==> lib [gcc_s]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [-lpthread] ==> lib [pthread]
-+    arg [-ladvapi32] ==> lib [advapi32]
-+    arg [-lshell32] ==> lib [shell32]
-+    arg [-luser32] ==> lib [user32]
-+    arg [-lkernel32] ==> lib [kernel32]
-+    arg [-liconv] ==> lib [iconv]
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc_s] ==> lib [gcc_s]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o] ==> obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+  remove lib [msvcrt]
-+  remove lib [msvcrt]
-+  collapse obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib/crt2.o]
-+  collapse obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o]
-+  collapse obj [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc] ==> [C:/Program Files/mingw-w64/mingw64/lib/gcc]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib] ==> [C:/Program Files/mingw-w64/mingw64/lib]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/PROGRA~1/MINGW-~1/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../..] ==> [C:/Program Files/mingw-w64/mingw64/lib]
-+  implicit libs: [stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;iconv;mingw32;gcc_s;gcc;moldname;mingwex]
-+  implicit objs: [C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib/crt2.o;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtbegin.o;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/crtend.o]
-+  implicit dirs: [C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0;C:/Program Files/mingw-w64/mingw64/lib/gcc;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib;C:/Program Files/mingw-w64/mingw64/lib]
-+  implicit fwks: []
-+
-+
-Index: cmake-build-debug/CMakeFiles/TargetDirectories.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
-new file mode 100644
---- /dev/null	(date 1660849029269)
-+++ b/cmake-build-debug/CMakeFiles/TargetDirectories.txt	(date 1660849029269)
-@@ -0,0 +1,3 @@
-+F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/Project.dir
-+F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/edit_cache.dir
-+F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug/CMakeFiles/rebuild_cache.dir
-Index: cmake-build-debug/CMakeFiles/rules.ninja
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/rules.ninja b/cmake-build-debug/CMakeFiles/rules.ninja
-new file mode 100644
---- /dev/null	(date 1660849029275)
-+++ b/cmake-build-debug/CMakeFiles/rules.ninja	(date 1660849029275)
-@@ -0,0 +1,64 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "Ninja" Generator, CMake Version 3.23
-+
-+# This file contains all the rules used to get the outputs files
-+# built from the input files.
-+# It is included in the main 'build.ninja'.
-+
-+# =============================================================================
-+# Project: Project
-+# Configurations: Debug
-+# =============================================================================
-+# =============================================================================
-+
-+#############################################
-+# Rule for compiling CXX files.
-+
-+rule CXX_COMPILER__Project_Debug
-+  depfile = $DEP_FILE
-+  deps = gcc
-+  command = C:\PROGRA~1\MINGW-~1\mingw64\bin\C__~1.EXE $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
-+  description = Building CXX object $out
-+
-+
-+#############################################
-+# Rule for linking CXX executable.
-+
-+rule CXX_EXECUTABLE_LINKER__Project_Debug
-+  command = cmd.exe /C "$PRE_LINK && C:\PROGRA~1\MINGW-~1\mingw64\bin\C__~1.EXE $FLAGS $LINK_FLAGS $in -o $TARGET_FILE -Wl,--out-implib,$TARGET_IMPLIB -Wl,--major-image-version,0,--minor-image-version,0 $LINK_PATH $LINK_LIBRARIES && $POST_BUILD"
-+  description = Linking CXX executable $TARGET_FILE
-+  restat = $RESTAT
-+
-+
-+#############################################
-+# Rule for running custom commands.
-+
-+rule CUSTOM_COMMAND
-+  command = $COMMAND
-+  description = $DESC
-+
-+
-+#############################################
-+# Rule for re-running cmake.
-+
-+rule RERUN_CMAKE
-+  command = "C:\Program Files\JetBrains\CLion 2021.1.3\bin\cmake\win\bin\cmake.exe" --regenerate-during-build -S"F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project" -B"F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project\cmake-build-debug"
-+  description = Re-running CMake...
-+  generator = 1
-+
-+
-+#############################################
-+# Rule for cleaning all built files.
-+
-+rule CLEAN
-+  command = "C:\Program Files\JetBrains\CLion 2021.1.3\bin\ninja\win\ninja.exe" $FILE_ARG -t clean $TARGETS
-+  description = Cleaning all built files...
-+
-+
-+#############################################
-+# Rule for printing all primary targets available.
-+
-+rule HELP
-+  command = "C:\Program Files\JetBrains\CLion 2021.1.3\bin\ninja\win\ninja.exe" -t targets
-+  description = All primary targets available:
-+
-Index: cmake-build-debug/CMakeFiles/clion-environment.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/clion-environment.txt b/cmake-build-debug/CMakeFiles/clion-environment.txt
-new file mode 100644
---- /dev/null	(date 1660849028871)
-+++ b/cmake-build-debug/CMakeFiles/clion-environment.txt	(date 1660849028871)
-@@ -0,0 +1,4 @@
-+ToolSet: w64 6.0 (local)@C:\Program Files\mingw-w64\mingw64
-+Options: 
-+
-+Options:-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe
-\ No newline at end of file
-Index: cmake-build-debug/CMakeFiles/cmake.check_cache
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/cmake.check_cache b/cmake-build-debug/CMakeFiles/cmake.check_cache
-new file mode 100644
---- /dev/null	(date 1660849029341)
-+++ b/cmake-build-debug/CMakeFiles/cmake.check_cache	(date 1660849029341)
-@@ -0,0 +1,1 @@
-+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
-Index: cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake
-new file mode 100644
---- /dev/null	(date 1660664118642)
-+++ b/cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake	(date 1660664118642)
-@@ -0,0 +1,6 @@
-+set(CMAKE_RC_COMPILER "C:/Program Files/mingw-w64/mingw64/bin/windres.exe")
-+set(CMAKE_RC_COMPILER_ARG1 "")
-+set(CMAKE_RC_COMPILER_LOADED 1)
-+set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC)
-+set(CMAKE_RC_OUTPUT_EXTENSION .obj)
-+set(CMAKE_RC_COMPILER_ENV_VAR "RC")
-Index: cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake b/cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake
-new file mode 100644
---- /dev/null	(date 1660664119989)
-+++ b/cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake	(date 1660664119989)
-@@ -0,0 +1,83 @@
-+set(CMAKE_CXX_COMPILER "C:/Program Files/mingw-w64/mingw64/bin/c++.exe")
-+set(CMAKE_CXX_COMPILER_ARG1 "")
-+set(CMAKE_CXX_COMPILER_ID "GNU")
-+set(CMAKE_CXX_COMPILER_VERSION "8.1.0")
-+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
-+set(CMAKE_CXX_COMPILER_WRAPPER "")
-+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")
-+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
-+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20")
-+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
-+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
-+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
-+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
-+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
-+set(CMAKE_CXX23_COMPILE_FEATURES "")
-+
-+set(CMAKE_CXX_PLATFORM_ID "MinGW")
-+set(CMAKE_CXX_SIMULATE_ID "")
-+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")
-+set(CMAKE_CXX_SIMULATE_VERSION "")
-+
-+
-+
-+
-+set(CMAKE_AR "C:/Program Files/mingw-w64/mingw64/bin/ar.exe")
-+set(CMAKE_CXX_COMPILER_AR "C:/Program Files/mingw-w64/mingw64/bin/gcc-ar.exe")
-+set(CMAKE_RANLIB "C:/Program Files/mingw-w64/mingw64/bin/ranlib.exe")
-+set(CMAKE_CXX_COMPILER_RANLIB "C:/Program Files/mingw-w64/mingw64/bin/gcc-ranlib.exe")
-+set(CMAKE_LINKER "C:/Program Files/mingw-w64/mingw64/bin/ld.exe")
-+set(CMAKE_MT "")
-+set(CMAKE_COMPILER_IS_GNUCXX 1)
-+set(CMAKE_CXX_COMPILER_LOADED 1)
-+set(CMAKE_CXX_COMPILER_WORKS TRUE)
-+set(CMAKE_CXX_ABI_COMPILED TRUE)
-+
-+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
-+
-+set(CMAKE_CXX_COMPILER_ID_RUN 1)
-+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)
-+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
-+
-+foreach (lang C OBJC OBJCXX)
-+  if (CMAKE_${lang}_COMPILER_ID_RUN)
-+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
-+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
-+    endforeach()
-+  endif()
-+endforeach()
-+
-+set(CMAKE_CXX_LINKER_PREFERENCE 30)
-+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
-+
-+# Save compiler ABI information.
-+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
-+set(CMAKE_CXX_COMPILER_ABI "")
-+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
-+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
-+
-+if(CMAKE_CXX_SIZEOF_DATA_PTR)
-+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
-+endif()
-+
-+if(CMAKE_CXX_COMPILER_ABI)
-+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
-+endif()
-+
-+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
-+  set(CMAKE_LIBRARY_ARCHITECTURE "")
-+endif()
-+
-+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
-+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
-+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
-+endif()
-+
-+
-+
-+
-+
-+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include")
-+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;mingw32;gcc_s;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;iconv;mingw32;gcc_s;gcc;moldname;mingwex")
-+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0;C:/Program Files/mingw-w64/mingw64/lib/gcc;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib;C:/Program Files/mingw-w64/mingw64/lib")
-+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
-Index: cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake
-new file mode 100644
---- /dev/null	(date 1660664119297)
-+++ b/cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake	(date 1660664119297)
-@@ -0,0 +1,72 @@
-+set(CMAKE_C_COMPILER "C:/Program Files/mingw-w64/mingw64/bin/gcc.exe")
-+set(CMAKE_C_COMPILER_ARG1 "")
-+set(CMAKE_C_COMPILER_ID "GNU")
-+set(CMAKE_C_COMPILER_VERSION "8.1.0")
-+set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
-+set(CMAKE_C_COMPILER_WRAPPER "")
-+set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")
-+set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")
-+set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17")
-+set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
-+set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
-+set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
-+set(CMAKE_C17_COMPILE_FEATURES "c_std_17")
-+set(CMAKE_C23_COMPILE_FEATURES "")
-+
-+set(CMAKE_C_PLATFORM_ID "MinGW")
-+set(CMAKE_C_SIMULATE_ID "")
-+set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")
-+set(CMAKE_C_SIMULATE_VERSION "")
-+
-+
-+
-+
-+set(CMAKE_AR "C:/Program Files/mingw-w64/mingw64/bin/ar.exe")
-+set(CMAKE_C_COMPILER_AR "C:/Program Files/mingw-w64/mingw64/bin/gcc-ar.exe")
-+set(CMAKE_RANLIB "C:/Program Files/mingw-w64/mingw64/bin/ranlib.exe")
-+set(CMAKE_C_COMPILER_RANLIB "C:/Program Files/mingw-w64/mingw64/bin/gcc-ranlib.exe")
-+set(CMAKE_LINKER "C:/Program Files/mingw-w64/mingw64/bin/ld.exe")
-+set(CMAKE_MT "")
-+set(CMAKE_COMPILER_IS_GNUCC 1)
-+set(CMAKE_C_COMPILER_LOADED 1)
-+set(CMAKE_C_COMPILER_WORKS TRUE)
-+set(CMAKE_C_ABI_COMPILED TRUE)
-+
-+set(CMAKE_C_COMPILER_ENV_VAR "CC")
-+
-+set(CMAKE_C_COMPILER_ID_RUN 1)
-+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
-+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
-+set(CMAKE_C_LINKER_PREFERENCE 10)
-+
-+# Save compiler ABI information.
-+set(CMAKE_C_SIZEOF_DATA_PTR "8")
-+set(CMAKE_C_COMPILER_ABI "")
-+set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")
-+set(CMAKE_C_LIBRARY_ARCHITECTURE "")
-+
-+if(CMAKE_C_SIZEOF_DATA_PTR)
-+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
-+endif()
-+
-+if(CMAKE_C_COMPILER_ABI)
-+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
-+endif()
-+
-+if(CMAKE_C_LIBRARY_ARCHITECTURE)
-+  set(CMAKE_LIBRARY_ARCHITECTURE "")
-+endif()
-+
-+set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
-+if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
-+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
-+endif()
-+
-+
-+
-+
-+
-+set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include;C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/include")
-+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;iconv;mingw32;gcc;moldname;mingwex")
-+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "C:/Program Files/mingw-w64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0;C:/Program Files/mingw-w64/mingw64/lib/gcc;C:/Program Files/mingw-w64/mingw64/x86_64-w64-mingw32/lib;C:/Program Files/mingw-w64/mingw64/lib")
-+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
-Index: cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake b/cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake
-new file mode 100644
---- /dev/null	(date 1660664117321)
-+++ b/cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake	(date 1660664117321)
-@@ -0,0 +1,15 @@
-+set(CMAKE_HOST_SYSTEM "Windows-10.0.19044")
-+set(CMAKE_HOST_SYSTEM_NAME "Windows")
-+set(CMAKE_HOST_SYSTEM_VERSION "10.0.19044")
-+set(CMAKE_HOST_SYSTEM_PROCESSOR "AMD64")
-+
-+
-+
-+set(CMAKE_SYSTEM "Windows-10.0.19044")
-+set(CMAKE_SYSTEM_NAME "Windows")
-+set(CMAKE_SYSTEM_VERSION "10.0.19044")
-+set(CMAKE_SYSTEM_PROCESSOR "AMD64")
-+
-+set(CMAKE_CROSSCOMPILING "FALSE")
-+
-+set(CMAKE_SYSTEM_LOADED 1)
-Index: cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/CMakeCCompilerId.c
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/CMakeCCompilerId.c b/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/CMakeCCompilerId.c
-new file mode 100644
---- /dev/null	(date 1660664117481)
-+++ b/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdC/CMakeCCompilerId.c	(date 1660664117481)
-@@ -0,0 +1,828 @@
-+#ifdef __cplusplus
-+# error "A C++ compiler has been selected for C."
-+#endif
-+
-+#if defined(__18CXX)
-+# define ID_VOID_MAIN
-+#endif
-+#if defined(__CLASSIC_C__)
-+/* cv-qualifiers did not exist in K&R C */
-+# define const
-+# define volatile
-+#endif
-+
-+#if !defined(__has_include)
-+/* If the compiler does not have __has_include, pretend the answer is
-+   always no.  */
-+#  define __has_include(x) 0
-+#endif
-+
-+
-+/* Version number components: V=Version, R=Revision, P=Patch
-+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
-+
-+#if defined(__INTEL_COMPILER) || defined(__ICC)
-+# define COMPILER_ID "Intel"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_ID "GNU"
-+# endif
-+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
-+     except that a few beta releases use the old format with V=2021.  */
-+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
-+#  if defined(__INTEL_COMPILER_UPDATE)
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
-+#  else
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
-+#  endif
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
-+   /* The third version component from --version is an update index,
-+      but no macro is provided for it.  */
-+#  define COMPILER_VERSION_PATCH DEC(0)
-+# endif
-+# if defined(__INTEL_COMPILER_BUILD_DATE)
-+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
-+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
-+# endif
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+# elif defined(__GNUG__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
-+# define COMPILER_ID "IntelLLVM"
-+#if defined(_MSC_VER)
-+# define SIMULATE_ID "MSVC"
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_ID "GNU"
-+#endif
-+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
-+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
-+ * VVVV is no smaller than the current year when a version is released.
-+ */
-+#if __INTEL_LLVM_COMPILER < 1000000L
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
-+#else
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
-+#endif
-+#if defined(_MSC_VER)
-+  /* _MSC_VER = VVRR */
-+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#elif defined(__GNUG__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+#endif
-+#if defined(__GNUC_MINOR__)
-+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#endif
-+#if defined(__GNUC_PATCHLEVEL__)
-+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#endif
-+
-+#elif defined(__PATHCC__)
-+# define COMPILER_ID "PathScale"
-+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
-+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
-+# if defined(__PATHCC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
-+# define COMPILER_ID "Embarcadero"
-+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
-+
-+#elif defined(__BORLANDC__)
-+# define COMPILER_ID "Borland"
-+  /* __BORLANDC__ = 0xVRR */
-+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
-+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
-+
-+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
-+# define COMPILER_ID "Watcom"
-+   /* __WATCOMC__ = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# define COMPILER_ID "OpenWatcom"
-+   /* __WATCOMC__ = VVRP + 1100 */
-+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__SUNPRO_C)
-+# define COMPILER_ID "SunPro"
-+# if __SUNPRO_C >= 0x5100
-+   /* __SUNPRO_C = 0xVRRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
-+# else
-+   /* __SUNPRO_CC = 0xVRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
-+# endif
-+
-+#elif defined(__HP_cc)
-+# define COMPILER_ID "HP"
-+  /* __HP_cc = VVRRPP */
-+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
-+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
-+
-+#elif defined(__DECC)
-+# define COMPILER_ID "Compaq"
-+  /* __DECC_VER = VVRRTPPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
-+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
-+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
-+
-+#elif defined(__IBMC__) && defined(__COMPILER_VER__)
-+# define COMPILER_ID "zOS"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__open_xl__) && defined(__clang__)
-+# define COMPILER_ID "IBMClang"
-+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
-+
-+
-+#elif defined(__ibmxl__) && defined(__clang__)
-+# define COMPILER_ID "XLClang"
-+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-+
-+
-+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
-+# define COMPILER_ID "XL"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
-+# define COMPILER_ID "VisualAge"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__NVCOMPILER)
-+# define COMPILER_ID "NVHPC"
-+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
-+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
-+# if defined(__NVCOMPILER_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__PGI)
-+# define COMPILER_ID "PGI"
-+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
-+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
-+# if defined(__PGIC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_CRAYC)
-+# define COMPILER_ID "Cray"
-+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
-+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# define COMPILER_ID "TI"
-+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
-+
-+#elif defined(__CLANG_FUJITSU)
-+# define COMPILER_ID "FujitsuClang"
-+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
-+
-+
-+#elif defined(__FUJITSU)
-+# define COMPILER_ID "Fujitsu"
-+# if defined(__FCC_version__)
-+#   define COMPILER_VERSION __FCC_version__
-+# elif defined(__FCC_major__)
-+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# endif
-+# if defined(__fcc_version)
-+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
-+# elif defined(__FCC_VERSION)
-+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
-+# endif
-+
-+
-+#elif defined(__ghs__)
-+# define COMPILER_ID "GHS"
-+/* __GHS_VERSION_NUMBER = VVVVRP */
-+# ifdef __GHS_VERSION_NUMBER
-+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-+# endif
-+
-+#elif defined(__TINYC__)
-+# define COMPILER_ID "TinyCC"
-+
-+#elif defined(__BCC__)
-+# define COMPILER_ID "Bruce"
-+
-+#elif defined(__SCO_VERSION__)
-+# define COMPILER_ID "SCO"
-+
-+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-+# define COMPILER_ID "ARMCC"
-+#if __ARMCC_VERSION >= 1000000
-+  /* __ARMCC_VERSION = VRRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-+#else
-+  /* __ARMCC_VERSION = VRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-+#endif
-+
-+
-+#elif defined(__clang__) && defined(__apple_build_version__)
-+# define COMPILER_ID "AppleClang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
-+
-+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-+# define COMPILER_ID "ARMClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
-+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-+
-+#elif defined(__clang__)
-+# define COMPILER_ID "Clang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+
-+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
-+# define COMPILER_ID "LCC"
-+# define COMPILER_VERSION_MAJOR DEC(1)
-+# if defined(__LCC__)
-+#  define COMPILER_VERSION_MINOR DEC(__LCC__- 100)
-+# endif
-+# if defined(__LCC_MINOR__)
-+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
-+# endif
-+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
-+#  define SIMULATE_ID "GNU"
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#  if defined(__GNUC_PATCHLEVEL__)
-+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#  endif
-+# endif
-+
-+#elif defined(__GNUC__)
-+# define COMPILER_ID "GNU"
-+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
-+# if defined(__GNUC_MINOR__)
-+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_MSC_VER)
-+# define COMPILER_ID "MSVC"
-+  /* _MSC_VER = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
-+# if defined(_MSC_FULL_VER)
-+#  if _MSC_VER >= 1400
-+    /* _MSC_FULL_VER = VVRRPPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
-+#  else
-+    /* _MSC_FULL_VER = VVRRPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
-+#  endif
-+# endif
-+# if defined(_MSC_BUILD)
-+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
-+# endif
-+
-+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
-+# define COMPILER_ID "ADSP"
-+#if defined(__VISUALDSPVERSION__)
-+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
-+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
-+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
-+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
-+#endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# define COMPILER_ID "IAR"
-+# if defined(__VER__) && defined(__ICCARM__)
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
-+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
-+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# endif
-+
-+#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
-+# define COMPILER_ID "SDCC"
-+# if defined(__SDCC_VERSION_MAJOR)
-+#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
-+#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
-+#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
-+# else
-+  /* SDCC = VRP */
-+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
-+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
-+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
-+# endif
-+
-+
-+/* These compilers are either not known or too old to define an
-+  identification macro.  Try to identify the platform and guess that
-+  it is the native compiler.  */
-+#elif defined(__hpux) || defined(__hpua)
-+# define COMPILER_ID "HP"
-+
-+#else /* unknown compiler */
-+# define COMPILER_ID ""
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
-+#ifdef SIMULATE_ID
-+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
-+#endif
-+
-+#ifdef __QNXNTO__
-+char const* qnxnto = "INFO" ":" "qnxnto[]";
-+#endif
-+
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
-+#endif
-+
-+#define STRINGIFY_HELPER(X) #X
-+#define STRINGIFY(X) STRINGIFY_HELPER(X)
-+
-+/* Identify known platforms by name.  */
-+#if defined(__linux) || defined(__linux__) || defined(linux)
-+# define PLATFORM_ID "Linux"
-+
-+#elif defined(__MSYS__)
-+# define PLATFORM_ID "MSYS"
-+
-+#elif defined(__CYGWIN__)
-+# define PLATFORM_ID "Cygwin"
-+
-+#elif defined(__MINGW32__)
-+# define PLATFORM_ID "MinGW"
-+
-+#elif defined(__APPLE__)
-+# define PLATFORM_ID "Darwin"
-+
-+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-+# define PLATFORM_ID "Windows"
-+
-+#elif defined(__FreeBSD__) || defined(__FreeBSD)
-+# define PLATFORM_ID "FreeBSD"
-+
-+#elif defined(__NetBSD__) || defined(__NetBSD)
-+# define PLATFORM_ID "NetBSD"
-+
-+#elif defined(__OpenBSD__) || defined(__OPENBSD)
-+# define PLATFORM_ID "OpenBSD"
-+
-+#elif defined(__sun) || defined(sun)
-+# define PLATFORM_ID "SunOS"
-+
-+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
-+# define PLATFORM_ID "AIX"
-+
-+#elif defined(__hpux) || defined(__hpux__)
-+# define PLATFORM_ID "HP-UX"
-+
-+#elif defined(__HAIKU__)
-+# define PLATFORM_ID "Haiku"
-+
-+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
-+# define PLATFORM_ID "BeOS"
-+
-+#elif defined(__QNX__) || defined(__QNXNTO__)
-+# define PLATFORM_ID "QNX"
-+
-+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
-+# define PLATFORM_ID "Tru64"
-+
-+#elif defined(__riscos) || defined(__riscos__)
-+# define PLATFORM_ID "RISCos"
-+
-+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
-+# define PLATFORM_ID "SINIX"
-+
-+#elif defined(__UNIX_SV__)
-+# define PLATFORM_ID "UNIX_SV"
-+
-+#elif defined(__bsdos__)
-+# define PLATFORM_ID "BSDOS"
-+
-+#elif defined(_MPRAS) || defined(MPRAS)
-+# define PLATFORM_ID "MP-RAS"
-+
-+#elif defined(__osf) || defined(__osf__)
-+# define PLATFORM_ID "OSF1"
-+
-+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
-+# define PLATFORM_ID "SCO_SV"
-+
-+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
-+# define PLATFORM_ID "ULTRIX"
-+
-+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
-+# define PLATFORM_ID "Xenix"
-+
-+#elif defined(__WATCOMC__)
-+# if defined(__LINUX__)
-+#  define PLATFORM_ID "Linux"
-+
-+# elif defined(__DOS__)
-+#  define PLATFORM_ID "DOS"
-+
-+# elif defined(__OS2__)
-+#  define PLATFORM_ID "OS2"
-+
-+# elif defined(__WINDOWS__)
-+#  define PLATFORM_ID "Windows3x"
-+
-+# elif defined(__VXWORKS__)
-+#  define PLATFORM_ID "VxWorks"
-+
-+# else /* unknown platform */
-+#  define PLATFORM_ID
-+# endif
-+
-+#elif defined(__INTEGRITY)
-+# if defined(INT_178B)
-+#  define PLATFORM_ID "Integrity178"
-+
-+# else /* regular Integrity */
-+#  define PLATFORM_ID "Integrity"
-+# endif
-+
-+#else /* unknown platform */
-+# define PLATFORM_ID
-+
-+#endif
-+
-+/* For windows compilers MSVC and Intel we can determine
-+   the architecture of the compiler being used.  This is because
-+   the compilers do not have flags that can change the architecture,
-+   but rather depend on which compiler is being used
-+*/
-+#if defined(_WIN32) && defined(_MSC_VER)
-+# if defined(_M_IA64)
-+#  define ARCHITECTURE_ID "IA64"
-+
-+# elif defined(_M_ARM64EC)
-+#  define ARCHITECTURE_ID "ARM64EC"
-+
-+# elif defined(_M_X64) || defined(_M_AMD64)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# elif defined(_M_ARM64)
-+#  define ARCHITECTURE_ID "ARM64"
-+
-+# elif defined(_M_ARM)
-+#  if _M_ARM == 4
-+#   define ARCHITECTURE_ID "ARMV4I"
-+#  elif _M_ARM == 5
-+#   define ARCHITECTURE_ID "ARMV5I"
-+#  else
-+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
-+#  endif
-+
-+# elif defined(_M_MIPS)
-+#  define ARCHITECTURE_ID "MIPS"
-+
-+# elif defined(_M_SH)
-+#  define ARCHITECTURE_ID "SHx"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# if defined(_M_I86)
-+#  define ARCHITECTURE_ID "I86"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# if defined(__ICCARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__ICCRX__)
-+#  define ARCHITECTURE_ID "RX"
-+
-+# elif defined(__ICCRH850__)
-+#  define ARCHITECTURE_ID "RH850"
-+
-+# elif defined(__ICCRL78__)
-+#  define ARCHITECTURE_ID "RL78"
-+
-+# elif defined(__ICCRISCV__)
-+#  define ARCHITECTURE_ID "RISCV"
-+
-+# elif defined(__ICCAVR__)
-+#  define ARCHITECTURE_ID "AVR"
-+
-+# elif defined(__ICC430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__ICCV850__)
-+#  define ARCHITECTURE_ID "V850"
-+
-+# elif defined(__ICC8051__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# elif defined(__ICCSTM8__)
-+#  define ARCHITECTURE_ID "STM8"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__ghs__)
-+# if defined(__PPC64__)
-+#  define ARCHITECTURE_ID "PPC64"
-+
-+# elif defined(__ppc__)
-+#  define ARCHITECTURE_ID "PPC"
-+
-+# elif defined(__ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__x86_64__)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(__i386__)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# if defined(__TI_ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__MSP430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__TMS320C28XX__)
-+#  define ARCHITECTURE_ID "TMS320C28x"
-+
-+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
-+#  define ARCHITECTURE_ID "TMS320C6x"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#else
-+#  define ARCHITECTURE_ID
-+#endif
-+
-+/* Convert integer to decimal digit literals.  */
-+#define DEC(n)                   \
-+  ('0' + (((n) / 10000000)%10)), \
-+  ('0' + (((n) / 1000000)%10)),  \
-+  ('0' + (((n) / 100000)%10)),   \
-+  ('0' + (((n) / 10000)%10)),    \
-+  ('0' + (((n) / 1000)%10)),     \
-+  ('0' + (((n) / 100)%10)),      \
-+  ('0' + (((n) / 10)%10)),       \
-+  ('0' +  ((n) % 10))
-+
-+/* Convert integer to hex digit literals.  */
-+#define HEX(n)             \
-+  ('0' + ((n)>>28 & 0xF)), \
-+  ('0' + ((n)>>24 & 0xF)), \
-+  ('0' + ((n)>>20 & 0xF)), \
-+  ('0' + ((n)>>16 & 0xF)), \
-+  ('0' + ((n)>>12 & 0xF)), \
-+  ('0' + ((n)>>8  & 0xF)), \
-+  ('0' + ((n)>>4  & 0xF)), \
-+  ('0' + ((n)     & 0xF))
-+
-+/* Construct a string literal encoding the version number. */
-+#ifdef COMPILER_VERSION
-+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
-+
-+/* Construct a string literal encoding the version number components. */
-+#elif defined(COMPILER_VERSION_MAJOR)
-+char const info_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
-+  COMPILER_VERSION_MAJOR,
-+# ifdef COMPILER_VERSION_MINOR
-+  '.', COMPILER_VERSION_MINOR,
-+#  ifdef COMPILER_VERSION_PATCH
-+   '.', COMPILER_VERSION_PATCH,
-+#   ifdef COMPILER_VERSION_TWEAK
-+    '.', COMPILER_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the internal version number. */
-+#ifdef COMPILER_VERSION_INTERNAL
-+char const info_version_internal[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-+  'i','n','t','e','r','n','a','l','[',
-+  COMPILER_VERSION_INTERNAL,']','\0'};
-+#elif defined(COMPILER_VERSION_INTERNAL_STR)
-+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
-+#endif
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef SIMULATE_VERSION_MAJOR
-+char const info_simulate_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
-+  SIMULATE_VERSION_MAJOR,
-+# ifdef SIMULATE_VERSION_MINOR
-+  '.', SIMULATE_VERSION_MINOR,
-+#  ifdef SIMULATE_VERSION_PATCH
-+   '.', SIMULATE_VERSION_PATCH,
-+#   ifdef SIMULATE_VERSION_TWEAK
-+    '.', SIMULATE_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-+
-+
-+
-+#if !defined(__STDC__) && !defined(__clang__)
-+# if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)
-+#  define C_VERSION "90"
-+# else
-+#  define C_VERSION
-+# endif
-+#elif __STDC_VERSION__ > 201710L
-+# define C_VERSION "23"
-+#elif __STDC_VERSION__ >= 201710L
-+# define C_VERSION "17"
-+#elif __STDC_VERSION__ >= 201000L
-+# define C_VERSION "11"
-+#elif __STDC_VERSION__ >= 199901L
-+# define C_VERSION "99"
-+#else
-+# define C_VERSION "90"
-+#endif
-+const char* info_language_standard_default =
-+  "INFO" ":" "standard_default[" C_VERSION "]";
-+
-+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
-+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
-+     defined(__TI_COMPILER_VERSION__)) &&                                     \
-+  !defined(__STRICT_ANSI__)
-+  "ON"
-+#else
-+  "OFF"
-+#endif
-+"]";
-+
-+/*--------------------------------------------------------------------------*/
-+
-+#ifdef ID_VOID_MAIN
-+void main() {}
-+#else
-+# if defined(__CLASSIC_C__)
-+int main(argc, argv) int argc; char *argv[];
-+# else
-+int main(int argc, char* argv[])
-+# endif
-+{
-+  int require = 0;
-+  require += info_compiler[argc];
-+  require += info_platform[argc];
-+  require += info_arch[argc];
-+#ifdef COMPILER_VERSION_MAJOR
-+  require += info_version[argc];
-+#endif
-+#ifdef COMPILER_VERSION_INTERNAL
-+  require += info_version_internal[argc];
-+#endif
-+#ifdef SIMULATE_ID
-+  require += info_simulate[argc];
-+#endif
-+#ifdef SIMULATE_VERSION_MAJOR
-+  require += info_simulate_version[argc];
-+#endif
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+  require += info_cray[argc];
-+#endif
-+  require += info_language_standard_default[argc];
-+  require += info_language_extensions_default[argc];
-+  (void)argv;
-+  return require;
-+}
-+#endif
-Index: cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/CMakeCXXCompilerId.cpp b/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
-new file mode 100644
---- /dev/null	(date 1660664118083)
-+++ b/cmake-build-debug/CMakeFiles/3.23.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	(date 1660664118083)
-@@ -0,0 +1,816 @@
-+/* This source file must have a .cpp extension so that all C++ compilers
-+   recognize the extension without flags.  Borland does not know .cxx for
-+   example.  */
-+#ifndef __cplusplus
-+# error "A C compiler has been selected for C++."
-+#endif
-+
-+#if !defined(__has_include)
-+/* If the compiler does not have __has_include, pretend the answer is
-+   always no.  */
-+#  define __has_include(x) 0
-+#endif
-+
-+
-+/* Version number components: V=Version, R=Revision, P=Patch
-+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
-+
-+#if defined(__COMO__)
-+# define COMPILER_ID "Comeau"
-+  /* __COMO_VERSION__ = VRR */
-+# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
-+# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
-+
-+#elif defined(__INTEL_COMPILER) || defined(__ICC)
-+# define COMPILER_ID "Intel"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_ID "GNU"
-+# endif
-+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
-+     except that a few beta releases use the old format with V=2021.  */
-+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
-+#  if defined(__INTEL_COMPILER_UPDATE)
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
-+#  else
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
-+#  endif
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
-+   /* The third version component from --version is an update index,
-+      but no macro is provided for it.  */
-+#  define COMPILER_VERSION_PATCH DEC(0)
-+# endif
-+# if defined(__INTEL_COMPILER_BUILD_DATE)
-+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
-+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
-+# endif
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+# elif defined(__GNUG__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
-+# define COMPILER_ID "IntelLLVM"
-+#if defined(_MSC_VER)
-+# define SIMULATE_ID "MSVC"
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_ID "GNU"
-+#endif
-+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
-+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
-+ * VVVV is no smaller than the current year when a version is released.
-+ */
-+#if __INTEL_LLVM_COMPILER < 1000000L
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
-+#else
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
-+#endif
-+#if defined(_MSC_VER)
-+  /* _MSC_VER = VVRR */
-+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#elif defined(__GNUG__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+#endif
-+#if defined(__GNUC_MINOR__)
-+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#endif
-+#if defined(__GNUC_PATCHLEVEL__)
-+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#endif
-+
-+#elif defined(__PATHCC__)
-+# define COMPILER_ID "PathScale"
-+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
-+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
-+# if defined(__PATHCC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
-+# define COMPILER_ID "Embarcadero"
-+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
-+
-+#elif defined(__BORLANDC__)
-+# define COMPILER_ID "Borland"
-+  /* __BORLANDC__ = 0xVRR */
-+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
-+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
-+
-+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
-+# define COMPILER_ID "Watcom"
-+   /* __WATCOMC__ = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# define COMPILER_ID "OpenWatcom"
-+   /* __WATCOMC__ = VVRP + 1100 */
-+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__SUNPRO_CC)
-+# define COMPILER_ID "SunPro"
-+# if __SUNPRO_CC >= 0x5100
-+   /* __SUNPRO_CC = 0xVRRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
-+# else
-+   /* __SUNPRO_CC = 0xVRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
-+# endif
-+
-+#elif defined(__HP_aCC)
-+# define COMPILER_ID "HP"
-+  /* __HP_aCC = VVRRPP */
-+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
-+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
-+
-+#elif defined(__DECCXX)
-+# define COMPILER_ID "Compaq"
-+  /* __DECCXX_VER = VVRRTPPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
-+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
-+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
-+
-+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
-+# define COMPILER_ID "zOS"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__open_xl__) && defined(__clang__)
-+# define COMPILER_ID "IBMClang"
-+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
-+
-+
-+#elif defined(__ibmxl__) && defined(__clang__)
-+# define COMPILER_ID "XLClang"
-+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-+
-+
-+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
-+# define COMPILER_ID "XL"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
-+# define COMPILER_ID "VisualAge"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__NVCOMPILER)
-+# define COMPILER_ID "NVHPC"
-+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
-+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
-+# if defined(__NVCOMPILER_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__PGI)
-+# define COMPILER_ID "PGI"
-+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
-+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
-+# if defined(__PGIC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_CRAYC)
-+# define COMPILER_ID "Cray"
-+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
-+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# define COMPILER_ID "TI"
-+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
-+
-+#elif defined(__CLANG_FUJITSU)
-+# define COMPILER_ID "FujitsuClang"
-+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
-+
-+
-+#elif defined(__FUJITSU)
-+# define COMPILER_ID "Fujitsu"
-+# if defined(__FCC_version__)
-+#   define COMPILER_VERSION __FCC_version__
-+# elif defined(__FCC_major__)
-+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# endif
-+# if defined(__fcc_version)
-+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
-+# elif defined(__FCC_VERSION)
-+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
-+# endif
-+
-+
-+#elif defined(__ghs__)
-+# define COMPILER_ID "GHS"
-+/* __GHS_VERSION_NUMBER = VVVVRP */
-+# ifdef __GHS_VERSION_NUMBER
-+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-+# endif
-+
-+#elif defined(__SCO_VERSION__)
-+# define COMPILER_ID "SCO"
-+
-+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-+# define COMPILER_ID "ARMCC"
-+#if __ARMCC_VERSION >= 1000000
-+  /* __ARMCC_VERSION = VRRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-+#else
-+  /* __ARMCC_VERSION = VRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-+#endif
-+
-+
-+#elif defined(__clang__) && defined(__apple_build_version__)
-+# define COMPILER_ID "AppleClang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
-+
-+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-+# define COMPILER_ID "ARMClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
-+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-+
-+#elif defined(__clang__)
-+# define COMPILER_ID "Clang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+
-+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
-+# define COMPILER_ID "LCC"
-+# define COMPILER_VERSION_MAJOR DEC(1)
-+# if defined(__LCC__)
-+#  define COMPILER_VERSION_MINOR DEC(__LCC__- 100)
-+# endif
-+# if defined(__LCC_MINOR__)
-+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
-+# endif
-+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
-+#  define SIMULATE_ID "GNU"
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#  if defined(__GNUC_PATCHLEVEL__)
-+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#  endif
-+# endif
-+
-+#elif defined(__GNUC__) || defined(__GNUG__)
-+# define COMPILER_ID "GNU"
-+# if defined(__GNUC__)
-+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_MSC_VER)
-+# define COMPILER_ID "MSVC"
-+  /* _MSC_VER = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
-+# if defined(_MSC_FULL_VER)
-+#  if _MSC_VER >= 1400
-+    /* _MSC_FULL_VER = VVRRPPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
-+#  else
-+    /* _MSC_FULL_VER = VVRRPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
-+#  endif
-+# endif
-+# if defined(_MSC_BUILD)
-+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
-+# endif
-+
-+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
-+# define COMPILER_ID "ADSP"
-+#if defined(__VISUALDSPVERSION__)
-+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
-+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
-+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
-+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
-+#endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# define COMPILER_ID "IAR"
-+# if defined(__VER__) && defined(__ICCARM__)
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
-+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
-+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# endif
-+
-+
-+/* These compilers are either not known or too old to define an
-+  identification macro.  Try to identify the platform and guess that
-+  it is the native compiler.  */
-+#elif defined(__hpux) || defined(__hpua)
-+# define COMPILER_ID "HP"
-+
-+#else /* unknown compiler */
-+# define COMPILER_ID ""
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
-+#ifdef SIMULATE_ID
-+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
-+#endif
-+
-+#ifdef __QNXNTO__
-+char const* qnxnto = "INFO" ":" "qnxnto[]";
-+#endif
-+
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
-+#endif
-+
-+#define STRINGIFY_HELPER(X) #X
-+#define STRINGIFY(X) STRINGIFY_HELPER(X)
-+
-+/* Identify known platforms by name.  */
-+#if defined(__linux) || defined(__linux__) || defined(linux)
-+# define PLATFORM_ID "Linux"
-+
-+#elif defined(__MSYS__)
-+# define PLATFORM_ID "MSYS"
-+
-+#elif defined(__CYGWIN__)
-+# define PLATFORM_ID "Cygwin"
-+
-+#elif defined(__MINGW32__)
-+# define PLATFORM_ID "MinGW"
-+
-+#elif defined(__APPLE__)
-+# define PLATFORM_ID "Darwin"
-+
-+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-+# define PLATFORM_ID "Windows"
-+
-+#elif defined(__FreeBSD__) || defined(__FreeBSD)
-+# define PLATFORM_ID "FreeBSD"
-+
-+#elif defined(__NetBSD__) || defined(__NetBSD)
-+# define PLATFORM_ID "NetBSD"
-+
-+#elif defined(__OpenBSD__) || defined(__OPENBSD)
-+# define PLATFORM_ID "OpenBSD"
-+
-+#elif defined(__sun) || defined(sun)
-+# define PLATFORM_ID "SunOS"
-+
-+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
-+# define PLATFORM_ID "AIX"
-+
-+#elif defined(__hpux) || defined(__hpux__)
-+# define PLATFORM_ID "HP-UX"
-+
-+#elif defined(__HAIKU__)
-+# define PLATFORM_ID "Haiku"
-+
-+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
-+# define PLATFORM_ID "BeOS"
-+
-+#elif defined(__QNX__) || defined(__QNXNTO__)
-+# define PLATFORM_ID "QNX"
-+
-+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
-+# define PLATFORM_ID "Tru64"
-+
-+#elif defined(__riscos) || defined(__riscos__)
-+# define PLATFORM_ID "RISCos"
-+
-+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
-+# define PLATFORM_ID "SINIX"
-+
-+#elif defined(__UNIX_SV__)
-+# define PLATFORM_ID "UNIX_SV"
-+
-+#elif defined(__bsdos__)
-+# define PLATFORM_ID "BSDOS"
-+
-+#elif defined(_MPRAS) || defined(MPRAS)
-+# define PLATFORM_ID "MP-RAS"
-+
-+#elif defined(__osf) || defined(__osf__)
-+# define PLATFORM_ID "OSF1"
-+
-+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
-+# define PLATFORM_ID "SCO_SV"
-+
-+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
-+# define PLATFORM_ID "ULTRIX"
-+
-+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
-+# define PLATFORM_ID "Xenix"
-+
-+#elif defined(__WATCOMC__)
-+# if defined(__LINUX__)
-+#  define PLATFORM_ID "Linux"
-+
-+# elif defined(__DOS__)
-+#  define PLATFORM_ID "DOS"
-+
-+# elif defined(__OS2__)
-+#  define PLATFORM_ID "OS2"
-+
-+# elif defined(__WINDOWS__)
-+#  define PLATFORM_ID "Windows3x"
-+
-+# elif defined(__VXWORKS__)
-+#  define PLATFORM_ID "VxWorks"
-+
-+# else /* unknown platform */
-+#  define PLATFORM_ID
-+# endif
-+
-+#elif defined(__INTEGRITY)
-+# if defined(INT_178B)
-+#  define PLATFORM_ID "Integrity178"
-+
-+# else /* regular Integrity */
-+#  define PLATFORM_ID "Integrity"
-+# endif
-+
-+#else /* unknown platform */
-+# define PLATFORM_ID
-+
-+#endif
-+
-+/* For windows compilers MSVC and Intel we can determine
-+   the architecture of the compiler being used.  This is because
-+   the compilers do not have flags that can change the architecture,
-+   but rather depend on which compiler is being used
-+*/
-+#if defined(_WIN32) && defined(_MSC_VER)
-+# if defined(_M_IA64)
-+#  define ARCHITECTURE_ID "IA64"
-+
-+# elif defined(_M_ARM64EC)
-+#  define ARCHITECTURE_ID "ARM64EC"
-+
-+# elif defined(_M_X64) || defined(_M_AMD64)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# elif defined(_M_ARM64)
-+#  define ARCHITECTURE_ID "ARM64"
-+
-+# elif defined(_M_ARM)
-+#  if _M_ARM == 4
-+#   define ARCHITECTURE_ID "ARMV4I"
-+#  elif _M_ARM == 5
-+#   define ARCHITECTURE_ID "ARMV5I"
-+#  else
-+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
-+#  endif
-+
-+# elif defined(_M_MIPS)
-+#  define ARCHITECTURE_ID "MIPS"
-+
-+# elif defined(_M_SH)
-+#  define ARCHITECTURE_ID "SHx"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# if defined(_M_I86)
-+#  define ARCHITECTURE_ID "I86"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# if defined(__ICCARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__ICCRX__)
-+#  define ARCHITECTURE_ID "RX"
-+
-+# elif defined(__ICCRH850__)
-+#  define ARCHITECTURE_ID "RH850"
-+
-+# elif defined(__ICCRL78__)
-+#  define ARCHITECTURE_ID "RL78"
-+
-+# elif defined(__ICCRISCV__)
-+#  define ARCHITECTURE_ID "RISCV"
-+
-+# elif defined(__ICCAVR__)
-+#  define ARCHITECTURE_ID "AVR"
-+
-+# elif defined(__ICC430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__ICCV850__)
-+#  define ARCHITECTURE_ID "V850"
-+
-+# elif defined(__ICC8051__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# elif defined(__ICCSTM8__)
-+#  define ARCHITECTURE_ID "STM8"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__ghs__)
-+# if defined(__PPC64__)
-+#  define ARCHITECTURE_ID "PPC64"
-+
-+# elif defined(__ppc__)
-+#  define ARCHITECTURE_ID "PPC"
-+
-+# elif defined(__ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__x86_64__)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(__i386__)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# if defined(__TI_ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__MSP430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__TMS320C28XX__)
-+#  define ARCHITECTURE_ID "TMS320C28x"
-+
-+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
-+#  define ARCHITECTURE_ID "TMS320C6x"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#else
-+#  define ARCHITECTURE_ID
-+#endif
-+
-+/* Convert integer to decimal digit literals.  */
-+#define DEC(n)                   \
-+  ('0' + (((n) / 10000000)%10)), \
-+  ('0' + (((n) / 1000000)%10)),  \
-+  ('0' + (((n) / 100000)%10)),   \
-+  ('0' + (((n) / 10000)%10)),    \
-+  ('0' + (((n) / 1000)%10)),     \
-+  ('0' + (((n) / 100)%10)),      \
-+  ('0' + (((n) / 10)%10)),       \
-+  ('0' +  ((n) % 10))
-+
-+/* Convert integer to hex digit literals.  */
-+#define HEX(n)             \
-+  ('0' + ((n)>>28 & 0xF)), \
-+  ('0' + ((n)>>24 & 0xF)), \
-+  ('0' + ((n)>>20 & 0xF)), \
-+  ('0' + ((n)>>16 & 0xF)), \
-+  ('0' + ((n)>>12 & 0xF)), \
-+  ('0' + ((n)>>8  & 0xF)), \
-+  ('0' + ((n)>>4  & 0xF)), \
-+  ('0' + ((n)     & 0xF))
-+
-+/* Construct a string literal encoding the version number. */
-+#ifdef COMPILER_VERSION
-+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
-+
-+/* Construct a string literal encoding the version number components. */
-+#elif defined(COMPILER_VERSION_MAJOR)
-+char const info_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
-+  COMPILER_VERSION_MAJOR,
-+# ifdef COMPILER_VERSION_MINOR
-+  '.', COMPILER_VERSION_MINOR,
-+#  ifdef COMPILER_VERSION_PATCH
-+   '.', COMPILER_VERSION_PATCH,
-+#   ifdef COMPILER_VERSION_TWEAK
-+    '.', COMPILER_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the internal version number. */
-+#ifdef COMPILER_VERSION_INTERNAL
-+char const info_version_internal[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-+  'i','n','t','e','r','n','a','l','[',
-+  COMPILER_VERSION_INTERNAL,']','\0'};
-+#elif defined(COMPILER_VERSION_INTERNAL_STR)
-+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
-+#endif
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef SIMULATE_VERSION_MAJOR
-+char const info_simulate_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
-+  SIMULATE_VERSION_MAJOR,
-+# ifdef SIMULATE_VERSION_MINOR
-+  '.', SIMULATE_VERSION_MINOR,
-+#  ifdef SIMULATE_VERSION_PATCH
-+   '.', SIMULATE_VERSION_PATCH,
-+#   ifdef SIMULATE_VERSION_TWEAK
-+    '.', SIMULATE_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-+
-+
-+
-+#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
-+#  if defined(__INTEL_CXX11_MODE__)
-+#    if defined(__cpp_aggregate_nsdmi)
-+#      define CXX_STD 201402L
-+#    else
-+#      define CXX_STD 201103L
-+#    endif
-+#  else
-+#    define CXX_STD 199711L
-+#  endif
-+#elif defined(_MSC_VER) && defined(_MSVC_LANG)
-+#  define CXX_STD _MSVC_LANG
-+#else
-+#  define CXX_STD __cplusplus
-+#endif
-+
-+const char* info_language_standard_default = "INFO" ":" "standard_default["
-+#if CXX_STD > 202002L
-+  "23"
-+#elif CXX_STD > 201703L
-+  "20"
-+#elif CXX_STD >= 201703L
-+  "17"
-+#elif CXX_STD >= 201402L
-+  "14"
-+#elif CXX_STD >= 201103L
-+  "11"
-+#else
-+  "98"
-+#endif
-+"]";
-+
-+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
-+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
-+     defined(__TI_COMPILER_VERSION__)) &&                                     \
-+  !defined(__STRICT_ANSI__)
-+  "ON"
-+#else
-+  "OFF"
-+#endif
-+"]";
-+
-+/*--------------------------------------------------------------------------*/
-+
-+int main(int argc, char* argv[])
-+{
-+  int require = 0;
-+  require += info_compiler[argc];
-+  require += info_platform[argc];
-+#ifdef COMPILER_VERSION_MAJOR
-+  require += info_version[argc];
-+#endif
-+#ifdef COMPILER_VERSION_INTERNAL
-+  require += info_version_internal[argc];
-+#endif
-+#ifdef SIMULATE_ID
-+  require += info_simulate[argc];
-+#endif
-+#ifdef SIMULATE_VERSION_MAJOR
-+  require += info_simulate_version[argc];
-+#endif
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+  require += info_cray[argc];
-+#endif
-+  require += info_language_standard_default[argc];
-+  require += info_language_extensions_default[argc];
-+  (void)argv;
-+  return require;
-+}
-Index: .idea/.gitignore
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/.gitignore b/.idea/.gitignore
-new file mode 100644
---- /dev/null	(date 1660664121518)
-+++ b/.idea/.gitignore	(date 1660664121518)
-@@ -0,0 +1,5 @@
-+# Default ignored files
-+/shelf/
-+/workspace.xml
-+# Editor-based HTTP Client requests
-+/httpRequests/
-Index: cmake-build-debug/Testing/Temporary/LastTest.log
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
-new file mode 100644
---- /dev/null	(date 1660985353215)
-+++ b/cmake-build-debug/Testing/Temporary/LastTest.log	(date 1660985353215)
-@@ -0,0 +1,3 @@
-+Start testing: Aug 20 10:49 Egypt Standard Time
-+----------------------------------------------------------
-+End testing: Aug 20 10:49 Egypt Standard Time
-Index: cmake-build-debug/CMakeFiles/clion-log.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/CMakeFiles/clion-log.txt b/cmake-build-debug/CMakeFiles/clion-log.txt
-new file mode 100644
---- /dev/null	(date 1660849029755)
-+++ b/cmake-build-debug/CMakeFiles/clion-log.txt	(date 1660849029755)
-@@ -0,0 +1,4 @@
-+"C:\Program Files\JetBrains\CLion 2021.1.3\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2021.1.3/bin/ninja/win/ninja.exe" -G Ninja -S "F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project" -B "F:\Harvard Abdo Basha\SMR 2022\DS\DR Ashraf lecs\Project\cmake-build-debug"
-+-- Configuring done
-+-- Generating done
-+-- Build files have been written to: F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug
-Index: cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-c66035bc840ee4bac614.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-c66035bc840ee4bac614.json b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-c66035bc840ee4bac614.json
-new file mode 100644
---- /dev/null	(date 1660664288468)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-c66035bc840ee4bac614.json	(date 1660664288468)
-@@ -0,0 +1,60 @@
-+{
-+	"configurations" : 
-+	[
-+		{
-+			"directories" : 
-+			[
-+				{
-+					"build" : ".",
-+					"jsonFile" : "directory-.-Debug-d0094a50bb2071803777.json",
-+					"minimumCMakeVersion" : 
-+					{
-+						"string" : "3.23"
-+					},
-+					"projectIndex" : 0,
-+					"source" : ".",
-+					"targetIndexes" : 
-+					[
-+						0
-+					]
-+				}
-+			],
-+			"name" : "Debug",
-+			"projects" : 
-+			[
-+				{
-+					"directoryIndexes" : 
-+					[
-+						0
-+					],
-+					"name" : "Project",
-+					"targetIndexes" : 
-+					[
-+						0
-+					]
-+				}
-+			],
-+			"targets" : 
-+			[
-+				{
-+					"directoryIndex" : 0,
-+					"id" : "Project::@6890427a1f51a3e7e1df",
-+					"jsonFile" : "target-Project-Debug-4be1092be36c35271931.json",
-+					"name" : "Project",
-+					"projectIndex" : 0
-+				}
-+			]
-+		}
-+	],
-+	"kind" : "codemodel",
-+	"paths" : 
-+	{
-+		"build" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug",
-+		"source" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project"
-+	},
-+	"version" : 
-+	{
-+		"major" : 2,
-+		"minor" : 4
-+	}
-+}
-Index: cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-e974cfcbd5908f0ed9cf.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-e974cfcbd5908f0ed9cf.json b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-e974cfcbd5908f0ed9cf.json
-new file mode 100644
---- /dev/null	(date 1660664288459)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-e974cfcbd5908f0ed9cf.json	(date 1660664288459)
-@@ -0,0 +1,160 @@
-+{
-+	"inputs" : 
-+	[
-+		{
-+			"path" : "CMakeLists.txt"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.23.2/CMakeSystem.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeSystemSpecificInitialize.cmake"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.23.2/CMakeCCompiler.cmake"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.23.2/CMakeCXXCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeSystemSpecificInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeGenericSystem.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeInitializeConfigs.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/WindowsPaths.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeLanguageInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU-C.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-C.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU.cmake"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.23.2/CMakeRCCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeRCInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-windres.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-C-ABI.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCommonLanguageInclude.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCXXInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeLanguageInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU-CXX.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Compiler/GNU.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-CXX.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/Platform/Windows-GNU-CXX-ABI.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "C:/Program Files/JetBrains/CLion 2021.1.3/bin/cmake/win/share/cmake-3.23/Modules/CMakeCommonLanguageInclude.cmake"
-+		}
-+	],
-+	"kind" : "cmakeFiles",
-+	"paths" : 
-+	{
-+		"build" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project/cmake-build-debug",
-+		"source" : "F:/Harvard Abdo Basha/SMR 2022/DS/DR Ashraf lecs/Project"
-+	},
-+	"version" : 
-+	{
-+		"major" : 1,
-+		"minor" : 0
-+	}
-+}
-Index: cmake-build-debug/.cmake/api/v1/reply/target-Project-Debug-4be1092be36c35271931.json
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/target-Project-Debug-4be1092be36c35271931.json b/cmake-build-debug/.cmake/api/v1/reply/target-Project-Debug-4be1092be36c35271931.json
-new file mode 100644
---- /dev/null	(date 1660664288463)
-+++ b/cmake-build-debug/.cmake/api/v1/reply/target-Project-Debug-4be1092be36c35271931.json	(date 1660664288463)
-@@ -0,0 +1,126 @@
-+{
-+	"artifacts" : 
-+	[
-+		{
-+			"path" : "Project.exe"
-+		},
-+		{
-+			"path" : "Project.pdb"
-+		}
-+	],
-+	"backtrace" : 1,
-+	"backtraceGraph" : 
-+	{
-+		"commands" : 
-+		[
-+			"add_executable"
-+		],
-+		"files" : 
-+		[
-+			"CMakeLists.txt"
-+		],
-+		"nodes" : 
-+		[
-+			{
-+				"file" : 0
-+			},
-+			{
-+				"command" : 0,
-+				"file" : 0,
-+				"line" : 6,
-+				"parent" : 0
-+			}
-+		]
-+	},
-+	"compileGroups" : 
-+	[
-+		{
-+			"compileCommandFragments" : 
-+			[
-+				{
-+					"fragment" : "-g"
-+				}
-+			],
-+			"language" : "CXX",
-+			"languageStandard" : 
-+			{
-+				"backtraces" : 
-+				[
-+					1
-+				],
-+				"standard" : "14"
-+			},
-+			"sourceIndexes" : 
-+			[
-+				0,
-+				1
-+			]
-+		}
-+	],
-+	"id" : "Project::@6890427a1f51a3e7e1df",
-+	"link" : 
-+	{
-+		"commandFragments" : 
-+		[
-+			{
-+				"fragment" : "-g",
-+				"role" : "flags"
-+			},
-+			{
-+				"fragment" : "",
-+				"role" : "flags"
-+			},
-+			{
-+				"fragment" : "-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32",
-+				"role" : "libraries"
-+			}
-+		],
-+		"language" : "CXX"
-+	},
-+	"name" : "Project",
-+	"nameOnDisk" : "Project.exe",
-+	"paths" : 
-+	{
-+		"build" : ".",
-+		"source" : "."
-+	},
-+	"sourceGroups" : 
-+	[
-+		{
-+			"name" : "Source Files",
-+			"sourceIndexes" : 
-+			[
-+				0,
-+				1
-+			]
-+		},
-+		{
-+			"name" : "Header Files",
-+			"sourceIndexes" : 
-+			[
-+				2
-+			]
-+		}
-+	],
-+	"sources" : 
-+	[
-+		{
-+			"backtrace" : 1,
-+			"compileGroupIndex" : 0,
-+			"path" : "main.cpp",
-+			"sourceGroupIndex" : 0
-+		},
-+		{
-+			"backtrace" : 1,
-+			"compileGroupIndex" : 0,
-+			"path" : "AA_Tree.cpp",
-+			"sourceGroupIndex" : 0
-+		},
-+		{
-+			"backtrace" : 1,
-+			"path" : "AA_Tree.h",
-+			"sourceGroupIndex" : 1
-+		}
-+	],
-+	"type" : "EXECUTABLE"
-+}
-Index: cmake-build-debug/.ninja_log
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/cmake-build-debug/.ninja_log b/cmake-build-debug/.ninja_log
-new file mode 100644
---- /dev/null	(date 1660849029324)
-+++ b/cmake-build-debug/.ninja_log	(date 1660849029324)
-@@ -0,0 +1,4 @@
-+# ninja log v5
-+10	355	6825520500177078	CMakeFiles/Project.dir/AA_Tree.cpp.obj	49aaed817d06d809
-+3	438	6825520500994896	CMakeFiles/Project.dir/main.cpp.obj	984cb9b99aeb1cf7
-+438	584	6825520502336930	Project.exe	fed8b1f01022b8d2
-diff --git a/cmake-build-debug/.cmake/api/v1/query/toolchains-v1 b/cmake-build-debug/.cmake/api/v1/query/toolchains-v1
-new file mode 100644
-diff --git a/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1 b/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1
-new file mode 100644
-diff --git a/cmake-build-debug/.cmake/api/v1/query/codemodel-v2 b/cmake-build-debug/.cmake/api/v1/query/codemodel-v2
-new file mode 100644
-diff --git a/cmake-build-debug/.cmake/api/v1/query/cache-v2 b/cmake-build-debug/.cmake/api/v1/query/cache-v2
-new file mode 100644
Index: .idea/Project.iml
===================================================================
diff --git a/.idea/Project.iml b/.idea/Project.iml
deleted file mode 100644
--- a/.idea/Project.iml	(revision a681af555d61f2ddc3d519e29113013fe085e765)
+++ /dev/null	(revision a681af555d61f2ddc3d519e29113013fe085e765)
@@ -1,2 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module classpath="CMake" type="CPP_MODULE" version="4" />
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision a681af555d61f2ddc3d519e29113013fe085e765)
+++ /dev/null	(revision a681af555d61f2ddc3d519e29113013fe085e765)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/Project.iml" filepath="$PROJECT_DIR$/.idea/Project.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision a681af555d61f2ddc3d519e29113013fe085e765)
+++ /dev/null	(revision a681af555d61f2ddc3d519e29113013fe085e765)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	(revision a681af555d61f2ddc3d519e29113013fe085e765)
+++ /dev/null	(revision a681af555d61f2ddc3d519e29113013fe085e765)
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
-</project>
\ No newline at end of file
